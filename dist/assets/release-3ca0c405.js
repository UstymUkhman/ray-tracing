async function T(c,_={}){const h={env:Object.assign(Object.create(globalThis),_.env||{},{abort(t,e,r,n){t=y(t>>>0),e=y(e>>>0),r=r>>>0,n=n>>>0,(()=>{throw Error(`${t} in ${e}:${r}:${n}`)})()}})},{exports:a}=await WebAssembly.instantiate(c,h),i=a.memory||_.env.memory,d=Object.setPrototypeOf({trace(t,e,r){e=g(w(Float32Array,5,2,e)||b()),r=w(Uint8ClampedArray,4,0,r)||b();try{return U(Uint8ClampedArray,a.trace(t,e,r)>>>0)}finally{m(e)}}},a);function y(t){if(!t)return null;const e=t+new Uint32Array(i.buffer)[t-4>>>2]>>>1,r=new Uint16Array(i.buffer);let n=t>>>1,s="";for(;e-n>1024;)s+=String.fromCharCode(...r.subarray(n,n+=1024));return s+String.fromCharCode(...r.subarray(n,e))}function U(t,e){return e?new t(i.buffer,E(e+4),f.getUint32(e+8,!0)/t.BYTES_PER_ELEMENT).slice():null}function w(t,e,r,n){if(n==null)return 0;const s=n.length,o=a.__pin(a.__new(s<<r,1))>>>0,l=a.__new(12,e)>>>0;return A(l+0,o),f.setUint32(l+4,o,!0),f.setUint32(l+8,s<<r,!0),new t(i.buffer,o,s).set(n),a.__unpin(o),l}const u=new Map;function g(t){if(t){const e=u.get(t);e?u.set(t,e+1):u.set(a.__pin(t),1)}return t}function m(t){if(t){const e=u.get(t);if(e===1)a.__unpin(t),u.delete(t);else if(e)u.set(t,e-1);else throw Error(`invalid refcount '${e}' for reference '${t}'`)}}function b(){throw TypeError("value must not be null")}let f=new DataView(i.buffer);function A(t,e){try{f.setUint32(t,e,!0)}catch{f=new DataView(i.buffer),f.setUint32(t,e,!0)}}function E(t){try{return f.getUint32(t,!0)}catch{return f=new DataView(i.buffer),f.getUint32(t,!0)}}return d}const{memory:C,trace:$}=await(async c=>T(await(async()=>{try{return await globalThis.WebAssembly.compileStreaming(globalThis.fetch(c))}catch{return globalThis.WebAssembly.compile(await(await import("./__vite-browser-external-4ed993c7.js")).readFile(c))}})(),{}))(new URL(""+new URL("release-1202170c.wasm",import.meta.url).href,self.location));export{C as memory,$ as trace};
