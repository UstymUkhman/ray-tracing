(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();const xt=(r,e)=>r===e,q={equals:xt};let ze=qe;const U=1,H=2,Oe={owned:null,cleanups:null,context:null,owner:null};var g=null;let ee=null,p=null,b=null,C=null,K=0;function bt(r,e){const t=p,i=g,s=r.length===0,o=e===void 0?i:e,n=s?Oe:{owned:null,cleanups:null,context:o?o.context:null,owner:o},a=s?r:()=>r(()=>L(()=>Z(n)));g=n,p=null;try{return z(a,!0)}finally{p=t,g=i}}function A(r,e){e=e?Object.assign({},q,e):q;const t={value:r,observers:null,observerSlots:null,comparator:e.equals||void 0},i=s=>(typeof s=="function"&&(s=s(t.value)),We(t,s));return[ke.bind(t),i]}function I(r,e,t){const i=fe(r,e,!1,U);N(i)}function yt(r,e,t){ze=Ct;const i=fe(r,e,!1,U);(!t||!t.render)&&(i.user=!0),C?C.push(i):N(i)}function wt(r,e,t){t=t?Object.assign({},q,t):q;const i=fe(r,e,!0,0);return i.observers=null,i.observerSlots=null,i.comparator=t.equals||void 0,N(i),ke.bind(i)}function L(r){if(p===null)return r();const e=p;p=null;try{return r()}finally{p=e}}function St(r){yt(()=>L(r))}function Et(r){return g===null||(g.cleanups===null?g.cleanups=[r]:g.cleanups.push(r)),r}function ke(){if(this.sources&&this.state)if(this.state===U)N(this);else{const r=b;b=null,z(()=>j(this),!1),b=r}if(p){const r=this.observers?this.observers.length:0;p.sources?(p.sources.push(this),p.sourceSlots.push(r)):(p.sources=[this],p.sourceSlots=[r]),this.observers?(this.observers.push(p),this.observerSlots.push(p.sources.length-1)):(this.observers=[p],this.observerSlots=[p.sources.length-1])}return this.value}function We(r,e,t){let i=r.value;return(!r.comparator||!r.comparator(i,e))&&(r.value=e,r.observers&&r.observers.length&&z(()=>{for(let s=0;s<r.observers.length;s+=1){const o=r.observers[s],n=ee&&ee.running;n&&ee.disposed.has(o),(n?!o.tState:!o.state)&&(o.pure?b.push(o):C.push(o),o.observers&&He(o)),n||(o.state=U)}if(b.length>1e6)throw b=[],new Error},!1)),e}function N(r){if(!r.fn)return;Z(r);const e=K;Pt(r,r.value,e)}function Pt(r,e,t){let i;const s=g,o=p;p=g=r;try{i=r.fn(e)}catch(n){return r.pure&&(r.state=U,r.owned&&r.owned.forEach(Z),r.owned=null),r.updatedAt=t+1,Ve(n)}finally{p=o,g=s}(!r.updatedAt||r.updatedAt<=t)&&(r.updatedAt!=null&&"observers"in r?We(r,i):r.value=i,r.updatedAt=t)}function fe(r,e,t,i=U,s){const o={fn:r,state:i,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:g,context:g?g.context:null,pure:t};return g===null||g!==Oe&&(g.owned?g.owned.push(o):g.owned=[o]),o}function V(r){if(r.state===0)return;if(r.state===H)return j(r);if(r.suspense&&L(r.suspense.inFallback))return r.suspense.effects.push(r);const e=[r];for(;(r=r.owner)&&(!r.updatedAt||r.updatedAt<K);)r.state&&e.push(r);for(let t=e.length-1;t>=0;t--)if(r=e[t],r.state===U)N(r);else if(r.state===H){const i=b;b=null,z(()=>j(r,e[0]),!1),b=i}}function z(r,e){if(b)return r();let t=!1;e||(b=[]),C?t=!0:C=[],K++;try{const i=r();return Tt(t),i}catch(i){t||(C=null),b=null,Ve(i)}}function Tt(r){if(b&&(qe(b),b=null),r)return;const e=C;C=null,e.length&&z(()=>ze(e),!1)}function qe(r){for(let e=0;e<r.length;e++)V(r[e])}function Ct(r){let e,t=0;for(e=0;e<r.length;e++){const i=r[e];i.user?r[t++]=i:V(i)}for(e=0;e<t;e++)V(r[e])}function j(r,e){r.state=0;for(let t=0;t<r.sources.length;t+=1){const i=r.sources[t];if(i.sources){const s=i.state;s===U?i!==e&&(!i.updatedAt||i.updatedAt<K)&&V(i):s===H&&j(i,e)}}}function He(r){for(let e=0;e<r.observers.length;e+=1){const t=r.observers[e];t.state||(t.state=H,t.pure?b.push(t):C.push(t),t.observers&&He(t))}}function Z(r){let e;if(r.sources)for(;r.sources.length;){const t=r.sources.pop(),i=r.sourceSlots.pop(),s=t.observers;if(s&&s.length){const o=s.pop(),n=t.observerSlots.pop();i<s.length&&(o.sourceSlots[n]=i,s[i]=o,t.observerSlots[i]=n)}}if(r.owned){for(e=r.owned.length-1;e>=0;e--)Z(r.owned[e]);r.owned=null}if(r.cleanups){for(e=r.cleanups.length-1;e>=0;e--)r.cleanups[e]();r.cleanups=null}r.state=0}function Rt(r){return r instanceof Error?r:new Error(typeof r=="string"?r:"Unknown error",{cause:r})}function Ve(r,e=g){throw Rt(r)}function F(r,e){return L(()=>r(e||{}))}function Ut(r,e,t){let i=t.length,s=e.length,o=i,n=0,a=0,d=e[s-1].nextSibling,c=null;for(;n<s||a<o;){if(e[n]===t[a]){n++,a++;continue}for(;e[s-1]===t[o-1];)s--,o--;if(s===n){const l=o<i?a?t[a-1].nextSibling:t[o-a]:d;for(;a<o;)r.insertBefore(t[a++],l)}else if(o===a)for(;n<s;)(!c||!c.has(e[n]))&&e[n].remove(),n++;else if(e[n]===t[o-1]&&t[a]===e[s-1]){const l=e[--s].nextSibling;r.insertBefore(t[a++],e[n++].nextSibling),r.insertBefore(t[--o],l),e[s]=t[o]}else{if(!c){c=new Map;let h=a;for(;h<o;)c.set(t[h],h++)}const l=c.get(e[n]);if(l!=null)if(a<l&&l<o){let h=n,y=1,w;for(;++h<s&&h<o&&!((w=c.get(e[h]))==null||w!==l+y);)y++;if(y>l-a){const m=e[n];for(;a<l;)r.insertBefore(t[a++],m)}else r.replaceChild(t[a++],e[n++])}else n++;else e[n++].remove()}}}const Ae="_$DX_DELEGATE";function _t(r,e,t,i={}){let s;return bt(o=>{s=o,e===document?r():x(e,r(),e.firstChild?null:void 0,t)},i.owner),()=>{s(),e.textContent=""}}function _(r,e,t){let i;const s=()=>{const n=document.createElement("template");return n.innerHTML=r,t?n.content.firstChild.firstChild:n.content.firstChild},o=e?()=>L(()=>document.importNode(i||(i=s()),!0)):()=>(i||(i=s())).cloneNode(!0);return o.cloneNode=o,o}function Mt(r,e=window.document){const t=e[Ae]||(e[Ae]=new Set);for(let i=0,s=r.length;i<s;i++){const o=r[i];t.has(o)||(t.add(o),e.addEventListener(o,At))}}function R(r,e,t){t==null?r.removeAttribute(e):r.setAttribute(e,t)}function te(r,e){e==null?r.removeAttribute("class"):r.className=e}function D(r,e,t){return L(()=>r(e,t))}function x(r,e,t,i){if(t!==void 0&&!i&&(i=[]),typeof e!="function")return X(r,e,i,t);I(s=>X(r,e(),s,t),i)}function At(r){const e=`$$${r.type}`;let t=r.composedPath&&r.composedPath()[0]||r.target;for(r.target!==t&&Object.defineProperty(r,"target",{configurable:!0,value:t}),Object.defineProperty(r,"currentTarget",{configurable:!0,get(){return t||document}});t;){const i=t[e];if(i&&!t.disabled){const s=t[`${e}Data`];if(s!==void 0?i.call(t,s,r):i.call(t,r),r.cancelBubble)return}t=t._$host||t.parentNode||t.host}}function X(r,e,t,i,s){for(;typeof t=="function";)t=t();if(e===t)return t;const o=typeof e,n=i!==void 0;if(r=n&&t[0]&&t[0].parentNode||r,o==="string"||o==="number")if(o==="number"&&(e=e.toString()),n){let a=t[0];a&&a.nodeType===3?a.data=e:a=document.createTextNode(e),t=M(r,t,i,a)}else t!==""&&typeof t=="string"?t=r.firstChild.data=e:t=r.textContent=e;else if(e==null||o==="boolean")t=M(r,t,i);else{if(o==="function")return I(()=>{let a=e();for(;typeof a=="function";)a=a();t=X(r,a,t,i)}),()=>t;if(Array.isArray(e)){const a=[],d=t&&Array.isArray(t);if(he(a,e,t,s))return I(()=>t=X(r,a,t,i,!0)),()=>t;if(a.length===0){if(t=M(r,t,i),n)return t}else d?t.length===0?Ie(r,a,i):Ut(r,t,a):(t&&M(r),Ie(r,a));t=a}else if(e.nodeType){if(Array.isArray(t)){if(n)return t=M(r,t,i,e);M(r,t,null,e)}else t==null||t===""||!r.firstChild?r.appendChild(e):r.replaceChild(e,r.firstChild);t=e}}return t}function he(r,e,t,i){let s=!1;for(let o=0,n=e.length;o<n;o++){let a=e[o],d=t&&t[o],c;if(!(a==null||a===!0||a===!1))if((c=typeof a)=="object"&&a.nodeType)r.push(a);else if(Array.isArray(a))s=he(r,a,d)||s;else if(c==="function")if(i){for(;typeof a=="function";)a=a();s=he(r,Array.isArray(a)?a:[a],Array.isArray(d)?d:[d])||s}else r.push(a),s=!0;else{const l=String(a);d&&d.nodeType===3&&d.data===l?r.push(d):r.push(document.createTextNode(l))}}return s}function Ie(r,e,t=null){for(let i=0,s=e.length;i<s;i++)r.insertBefore(e[i],t)}function M(r,e,t,i){if(t===void 0)return r.textContent="";const s=i||document.createTextNode("");if(e.length){let o=!1;for(let n=e.length-1;n>=0;n--){const a=e[n];if(s!==a){const d=a.parentNode===r;!o&&!n?d?r.replaceChild(s,a):r.insertBefore(s,t):d&&a.remove()}else o=!0}}else r.insertBefore(s,t);return[s]}const me=50,O=500,E=240,P=360,It=!1,ue=Object.freeze(Object.defineProperty({__proto__:null,height:E,log:It,maxDepth:me,samples:O,width:P},Symbol.toStringTag,{value:"Module"})),re=(r,e=0,t=1)=>Math.max(e,Math.min(r,t)),W=(r,e)=>Math.random()*(e-r)+r,Lt=r=>r*Math.PI/180,Le=(r,e=3)=>{const t=Math.pow(10,e);return~~(t*r)/t},Bt=1/.06,$t="modulepreload",Gt=function(r,e){return new URL(r,e).href},Be={},Y=function(e,t,i){let s=Promise.resolve();if(t&&t.length>0){const o=document.getElementsByTagName("link");s=Promise.all(t.map(n=>{if(n=Gt(n,i),n in Be)return;Be[n]=!0;const a=n.endsWith(".css"),d=a?'[rel="stylesheet"]':"";if(!!i)for(let h=o.length-1;h>=0;h--){const y=o[h];if(y.href===n&&(!a||y.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${n}"]${d}`))return;const l=document.createElement("link");if(l.rel=a?"stylesheet":$t,a||(l.as="script",l.crossOrigin=""),l.href=n,document.head.appendChild(l),a)return new Promise((h,y)=>{l.addEventListener("load",h),l.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${n}`)))})}))}return s.then(()=>e()).catch(o=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=o,window.dispatchEvent(n),!n.defaultPrevented)throw o})},Dt=[13,2,3],Ft=[0,0,0],Nt=[0,1,0],zt=20,Ot=.1,ie=10;class f{vec=[0,0,0];constructor(e=0,t=e,i=e){this.vec[0]=e,this.vec[1]=t,this.vec[2]=i}refract(e,t){const i=Math.min(this.clone.negate.dot(e),1);this.copy(e.clone.multiply(i).add(this).multiply(t));const s=Math.abs(1-this.lengthSquared);return this.add(e.multiply(-Math.sqrt(s)))}set(e,t,i){return this.vec[0]=e,this.vec[1]=t,this.vec[2]=i,this}multiply(e){if(typeof e!="number")return this.set(this.vec[0]*e.x,this.vec[1]*e.y,this.vec[2]*e.z);const t=e;return this.vec[0]*=t,this.vec[1]*=t,this.vec[2]*=t,this}divide(e){return typeof e=="number"?this.multiply(1/e):this.set(this.vec[0]/e.x,this.vec[1]/e.y,this.vec[2]/e.z)}random(e=0,t=1){return this.set(W(e,t),W(e,t),W(e,t))}reflect(e){return this.sub(e.clone.multiply(this.dot(e)*2))}get randomNormalized(){return this.randomUnitSphere.normalize}get randomUnitSphere(){for(;;)if(this.random(-1).lengthSquared<1)return this}get lengthSquared(){return this.dot(this)}get randomUnitDisk(){for(;;)if(this.random(-1),this.vec[2]=0,this.lengthSquared<1)return this}cross(e){return this.set(this.vec[1]*e.z-this.vec[2]*e.y,this.vec[2]*e.x-this.vec[0]*e.z,this.vec[0]*e.y-this.vec[1]*e.x)}dot(e){return this.vec[0]*e.x+this.vec[1]*e.y+this.vec[2]*e.z}copy(e){const{x:t,y:i,z:s}=e;return this.set(t,i,s)}add(e){return this.vec[0]+=e.x,this.vec[1]+=e.y,this.vec[2]+=e.z,this}sub(e){return this.vec[0]-=e.x,this.vec[1]-=e.y,this.vec[2]-=e.z,this}get nearZero(){return Math.abs(this.vec[0])<1e-8&&Math.abs(this.vec[1])<1e-8&&Math.abs(this.vec[2])<1e-8}get normalize(){return this.divide(this.length)}get length(){return Math.sqrt(this.lengthSquared)}get clone(){return new f(this.vec[0],this.vec[1],this.vec[2])}reset(e=0){return this.set(e,e,e)}get negate(){return this.multiply(-1)}get sqrt(){return this.set(Math.sqrt(this.vec[0]),Math.sqrt(this.vec[1]),Math.sqrt(this.vec[2]))}get rgb(){return this.set(re(this.vec[0]*256|0,0,255),re(this.vec[1]*256|0,0,255),re(this.vec[2]*256|0,0,255))}get x(){return this.vec[0]}get y(){return this.vec[1]}get z(){return this.vec[2]}get(){return this.vec}}class je{u;v;origin;vertical;lensRadius;horizontal;random=new f;lowerLeftCorner;constructor(){const e=new f(...Dt),t=Math.tan(Lt(zt)*.5)*2,i=e.clone.sub(new f(...Ft)).normalize;this.u=new f(...Nt).cross(i).normalize,this.v=i.clone.cross(this.u),this.origin=e;const s=P/E*t;this.lensRadius=Ot*.5,this.horizontal=this.u.clone.multiply(s).multiply(ie),this.vertical=this.v.clone.multiply(t).multiply(ie),this.lowerLeftCorner=this.origin.clone.sub(this.horizontal.clone.divide(2)).sub(this.vertical.clone.divide(2)).sub(i.multiply(ie))}setRay(e,t,i){const s=this.random.randomUnitDisk.multiply(this.lensRadius),o=this.u.clone.multiply(s.x).add(this.v.clone.multiply(s.y));e.direction=this.lowerLeftCorner.clone.add(this.horizontal.clone.multiply(t)).add(this.vertical.clone.multiply(i)).sub(this.origin).sub(o),e.origin=o.add(this.origin)}get uniform(){return{lowerLeftCorner:this.lowerLeftCorner.get(),horizontal:this.horizontal.get(),vertical:this.vertical.get(),lensRadius:this.lensRadius,origin:this.origin.get(),v:this.v.get(),u:this.u.get()}}}const Xe=(r,e=1)=>new Map([["r",r>>16&e],["g",r>>8&e],["b",r&e]]),kt=(r,e)=>r.divide(e).sqrt.rgb,Wt=r=>`#${`000000${r.toString(16)}`.slice(-6)}`,yr=(r,e,t)=>{const i=new f;for(let s=0;s<r.length;s+=3){const{x:o,y:n,z:a}=kt(i.set(r[s],r[s+1],r[s+2]),t);e[s]=o,e[s+1]=n,e[s+2]=a}return e};class qt{t=0;frontFace=!1;material;point=new f;normal=new f;setFaceNormal(e,t){this.frontFace=e.direction.dot(t)<0,this.normal.copy(this.frontFace?t:t.negate)}}const v=new qt;class Ye{}class Ht extends Ye{objects=[];constructor(){super()}add(e){this.objects.push(e)}hit(e,t,i){let s=!1,o=i;for(let n=0,a=this.objects.length;n<a;n++)this.objects[n].hit(e,t,o)&&(o=v.t,s=!0);return s}get hittables(){return this.objects}dispose(){this.objects.length=0}}class pe{}class se extends pe{fuzz;albedo;direction=new f;constructor(e,t){super(),this.albedo=e.clone,this.fuzz=Math.min(t,1)}scatter(e,t,i){const s=e.direction.normalize.reflect(v.normal);return this.direction.randomUnitSphere.multiply(this.fuzz).add(s),t.direction=this.direction,t.origin=v.point,i.copy(this.albedo),this.direction.dot(v.normal)>0}}class oe extends pe{albedo;direction=new f;constructor(e){super(),this.albedo=e.clone}scatter(e,t,i){const s=v.normal.clone.add(this.direction.randomNormalized);return s.nearZero&&s.copy(v.normal),t.direction=s,t.origin=v.point,i.copy(this.albedo),!0}}class ne extends pe{constructor(e){super(),this.refraction=e}reflectance(e,t){const i=Math.pow((1-t)/(1+t),2);return Math.pow(1-e,5)*(1-i)+i}scatter(e,t,i){const s=e.direction.normalize,o=Math.min(s.clone.negate.dot(v.normal),1),n=v.frontFace?1/this.refraction:this.refraction;return Math.sqrt(1-o*o)*n>1||Math.random()<this.reflectance(o,n)?s.reflect(v.normal):s.refract(v.normal,n),t.direction=s,t.origin=v.point,i.reset(1),!0}}class Ke{list=new Ht;color=new f;constructor(){this.addSphere(1e3,new f(0,-1e3,0),new oe(new f(.5))),this.generateSmallSpheres(),this.addSphere(1,new f(0,1,0),new ne(1.5)),this.addSphere(1,new f(-4,1,0),new oe(new f(.4,.2,.1))),this.addSphere(1,new f(4,1,0),new se(new f(.7,.6,.5),0))}addSphere(e,t,i){this.list.add(new Vt(e,t,i))}createSpheresUniforms(){return this.hittables.map(e=>{const t=e,i={albedo:[1,1,1],extra:-1,type:0};return t.material instanceof se?(i.albedo=t.material.albedo.get(),i.extra=t.material.fuzz,i.type=1):t.material instanceof ne?(i.extra=t.material.refraction,i.type=2):i.albedo=t.material.albedo.get(),{center:t.center.get(),radius:t.radius,material:i}})}generateSmallSpheres(){for(let e=-11;e<11;e++)for(let t=-11;t<11;t++){const i=new f(Math.random()*.9+e,.2,Math.random()*.9+t),s=new f(4,.2,0);if(i.clone.sub(s).length>.9){const o=Math.random();if(o<.8){this.color.random().multiply(this.color.random());const n=new oe(this.color);this.addSphere(.2,i,n)}else if(o<.95){this.color.random(.5);const n=W(0,.5),a=new se(this.color,n);this.addSphere(.2,i,a)}else{const n=new ne(1.5);this.addSphere(.2,i,n)}}}}get hittables(){return this.list.hittables}get objects(){return this.list}dispose(){this.list.dispose(),this.color.reset()}}class Vt extends Ye{constructor(e,t,i){super(),this.radius=e,this.center=t,this.material=i}hit(e,t,i){const s=e.origin.clone.sub(this.center),o=e.direction.lengthSquared,n=s.dot(e.direction),a=s.lengthSquared-this.radius*this.radius,d=n*n-o*a;if(d<0)return!1;const c=Math.sqrt(d);let l=(-n-c)/o;if((l<t||l>i)&&(l=(-n+c)/o,l<t||l>i))return!1;v.point.copy(e.at(l));const h=v.point.clone.sub(this.center).divide(this.radius);return v.setFaceNormal(e,h),v.material=this.material,v.t=l,!0}}class ge{textureData;context;image;clearColor=0;height;width;constructor(e){const{canvas:t,context:i,offscreen:s}=e;this.width=t.width,this.height=t.height,this.context=t.getContext(this.getContextId(i),this.getOptions(i,s)),this.textureData=new Uint8ClampedArray(this.width*this.height*4),this.image=new ImageData(this.textureData,this.width,this.height)}getContextId(e){switch(e){case"WebGPU":return"webgpu";case"WebGL2":return"webgl2";case"WebGL":return"webgl";default:return"2d"}}getOptions(e,t=!1){switch(e){case"WebGPU":return;case"Canvas2D":return{willReadFrequently:!t,desynchronized:t,colorSpace:"srgb",alpha:!0};default:return{powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0,preserveDrawingBuffer:!1,desynchronized:!t,premultipliedAlpha:!0,antialias:!0,stencil:!1,depth:!1,alpha:!0}}}setImageData(e){for(let t=0,i=0;t<e.length;t+=3,i+=4)this.image.data[i]=e[t],this.image.data[i+1]=e[t+1],this.image.data[i+2]=e[t+2],this.image.data[i+3]=255}}var jt="struct VertexOutput{@location(0)coords: vec2f,@builtin(position)position: vec4f};@group(0)@binding(0)var texture: texture_2d<f32>;@group(0)@binding(1)var textureSampler: sampler;@vertex fn mainVertex(@builtin(vertex_index)index: u32)->VertexOutput{let position=array(vec2f(0.0,0.0),vec2f(1.0,0.0),vec2f(1.0,1.0),vec2f(1.0,1.0),vec2f(0.0,1.0),vec2f(0.0,0.0));var output: VertexOutput;let coords=position[index];output.position=vec4f(coords*2-1,0,1);output.coords=coords;return output;}@fragment fn mainFragment(@location(0)coords: vec2f)->@location(0)vec4f{return textureSample(texture,textureSampler,coords);}",Xt="override size: u32;struct Ray{origin: vec3f,direction: vec3f};fn at(ray: Ray,t: f32)->vec3f{return ray.origin+ray.direction*t;}const INFINITY=3.40282346638528859812e+38f;const PI=radians(180.0);var<private>rnd: vec3u;fn initializeRandom(invocation: vec3u){const A=vec3(1741651*1009,140893*1609*13,6521*983*7*2);rnd=(invocation*A)^ tracer.seed;}fn random()->f32{const C=vec3(60493*9377,11279*2539*23,7919*631*5*3);rnd=(rnd*C)^(rnd.yzx>>vec3(4u));return f32(rnd.x ^ rnd.y)/f32(0xffffffff);}fn randomMinMax(mi: f32,ma: f32)->f32{return random()*(ma-mi)+mi;}fn degToRad(deg: f32)->f32{return deg*PI/180.0;}fn nearZero(vec: vec3f)->bool{return(abs(vec.x)<1e-8f)&&(abs(vec.y)<1e-8f)&&(abs(vec.z)<1e-8f);}fn randomVec()->vec3f{return vec3f(random(),random(),random());}fn randomMinMaxVec(mi: f32,ma: f32)->vec3f{return vec3f(randomMinMax(mi,ma),randomMinMax(mi,ma),randomMinMax(mi,ma));}fn lengthSquared(vec: vec3f)->f32{return dot(vec,vec);}fn randomUnitDisk()->vec3f{let rand=random();let x=rand*2.0-1.0;let y=randomMinMax(-2.0,2.0)*sqrt(rand*-rand+rand);return vec3f(x,y,0.0);}fn randomUnitSphere()->vec3f{for(;;){let rand=randomMinMaxVec(-1.0,1.0);if(lengthSquared(rand)<1.0){return rand;}}}fn randomNormalized()->vec3f{return normalize(randomUnitSphere());}fn randomHemisphere(normal: vec3f)->vec3f{let unitSphere=randomUnitSphere();return select(-unitSphere,unitSphere,dot(unitSphere,normal)>0.0);}struct Camera{u: vec3f,v: vec3f,origin: vec3f,vertical: vec3f,horizontal: vec3f,lowerLeftCorner: vec3f,lensRadius: f32};fn getRay(camera: Camera,s: f32,t: f32)->Ray{let randomDisk=randomUnitDisk()*camera.lensRadius;let offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}const LAMBERTIAN=0u;const METAL=1u;const DIELECTRIC=2u;struct Material{scattered: Ray,attenuation: vec3f,scatter: bool};struct Record{t: f32,point: vec3f,normal: vec3f,material: vec4f,frontFace: bool};var<private>record=Record();fn setFaceNormal(ray: Ray,outwardNormal: vec3f){record.frontFace=dot(ray.direction,outwardNormal)<0.0;record.normal=select(-outwardNormal,outwardNormal,record.frontFace);}struct Sphere{transform: vec4f,material: vec4f};fn sphereHit(ray: Ray,tMin: f32,tMax: f32,sphere: Sphere)->bool{let oc=ray.origin-sphere.transform.xyz;let a=lengthSquared(ray.direction);let halfB=dot(oc,ray.direction);let radius=sphere.transform.w;let c=lengthSquared(oc)-radius*radius;let d=halfB*halfB-a*c;if(d<0.0){return false;}let sqrtD=sqrt(d);var root=(-halfB-sqrtD)/a;if(root<tMin||root>tMax){root=(-halfB+sqrtD)/a;if(root<tMin||root>tMax){return false;}}record.t=root;record.point=at(ray,root);record.material=sphere.material;setFaceNormal(ray,(record.point-sphere.transform.xyz)/radius);return true;}fn hitObject(ray: Ray,tMin: f32,tMax: f32)->bool{var hit=false;var closest=tMax;for(var s=0u;s<SPHERES;s++){if(sphereHit(ray,tMin,closest,spheres[s])){closest=record.t;hit=true;}}return hit;}fn metalScatter(material: vec4f,ray: Ray)->Material{let reflected=reflect(normalize(ray.direction),record.normal)+randomUnitSphere()*material.a;let scattered=Ray(record.point,reflected);return Material(scattered,material.rgb,dot(scattered.direction,record.normal)>0.0f);}fn reflectance(cosine: f32,ratio: f32)->f32{var reflectance=(1.0-ratio)/(1.0+ratio);reflectance=reflectance*reflectance;return pow((1.0-cosine),5.0)*(1.0-reflectance)+reflectance;}fn dielectricScatter(material: vec4f,ray: Ray)->Material{var direction=normalize(ray.direction);let tCos=min(dot(-direction,record.normal),1.0);let ratio=select(material.a,1.0/material.a,record.frontFace);let willReflect=random()<reflectance(tCos,ratio)||sqrt(1.0-tCos*tCos)*ratio>1.0;direction=select(refract(direction,record.normal,ratio),reflect(direction,record.normal),willReflect);return Material(Ray(record.point,direction),material.rgb,true);}fn lambertianScatter(material: vec4f)->Material{var direction=record.normal+randomNormalized();if(nearZero(direction)){direction=record.normal;}return Material(Ray(record.point,direction),material.rgb,true);}const WHITE=vec3f(1.0,1.0,1.0);const SKY=vec3f(0.5,0.7,1.0);fn skyColor(ray: Ray)->vec3f{let direction=normalize(ray.direction);let t=(direction.y+1.0)*0.5;return(1.0-t)*WHITE+SKY*t;}fn getColor(ray: Ray,depth: u32)->vec3f{var color=WHITE;var scatteredRay=ray;for(var d=depth;d>0u;d--){if(hitObject(scatteredRay,0.001,INFINITY)){var scattered: Ray;var material: Material;if(record.material.a>1.0){material=dielectricScatter(record.material,scatteredRay);}else if(record.material.a>-1.0){material=metalScatter(record.material,scatteredRay);}else{material=lambertianScatter(record.material);}if(material.scatter){scatteredRay=material.scattered;color*=material.attenuation;}}else{color*=skyColor(scatteredRay);break;}}return color;}fn inputColor(color: vec3f,samples: u32)->vec3f{return color*color*f32(samples-1u);}fn outputColor(color: vec3f,samples: u32)->vec3f{var output=color/f32(samples);output=sqrt(output);return output;}struct Tracer{maxDepth: u32,samples: u32,seed: vec3u};@group(0)@binding(0)var<uniform>tracer: Tracer;@group(0)@binding(1)var<storage,read>camera: Camera;@group(0)@binding(2)var<storage,read>spheres: array<Sphere,SPHERES>;@group(0)@binding(3)var<storage,read_write>colorBuffer: array<vec3f>;@group(0)@binding(4)var framebuffer: texture_storage_2d<rgba16float,write>;@compute @workgroup_size(size,size)fn mainCompute(@builtin(global_invocation_id)globalInvocation: vec3u){let res=vec2f(textureDimensions(framebuffer));let coord=vec2f(globalInvocation.xy);if(all(coord<res)){let bufferIndex=u32(coord.x+coord.y*res.x);var color=colorBuffer[bufferIndex];initializeRandom(globalInvocation);color=inputColor(color,tracer.samples);let u=(coord.x+random())/res.x;let v=(coord.y+random())/res.y;let ray=getRay(camera,u,v);color+=getColor(ray,tracer.maxDepth);colorBuffer[bufferIndex]=outputColor(color,tracer.samples);textureStore(framebuffer,globalInvocation.xy,vec4f(colorBuffer[bufferIndex],1.0));}}";class Ze extends ge{samples=0;device;adapter;format;imageTexture;imageBindGroup;imagePipeline;tracerBuffer;computeBindGroup;computePipeline;tracer=new Uint32Array(8);workgroupCount=[0,0];draw=this.drawImage.bind(this,void 0);constructor(e,t){super(e),this.initializeWebGPU().then(this.createRenderPipeline.bind(this,e.tracer,t)).catch(i=>u.dispatch("WebGPU::Init::Fail",i.message))}async initializeWebGPU(){if(!navigator.gpu)throw new Error("WebGPU is not supported on this browser.");if(!this.context)throw new Error("Failed to initialize WebGPU context.");const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance",forceFallbackAdapter:!1});if(e)this.adapter=e;else throw new Error("No appropriate GPUAdapter found.");const t=[];if(this.format=navigator.gpu.getPreferredCanvasFormat(),this.format==="bgra8unorm"&&t.push("bgra8unorm-storage"),!this.adapter.features.has("bgra8unorm-storage"))throw new Error('"bgra8unorm-storage" is not supported on this GPUAdapter.');this.device=await this.adapter.requestDevice({requiredFeatures:t}),this.context.configure({usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.STORAGE_BINDING,device:this.device,format:this.format})}createRenderPipeline(e,t){this.clear(),e==="WebGPU"?this.createComputePipeline():this.createImagePipeline(),t?.()}createComputePipeline(){const e=new Ke;this.createImagePipeline(!0);const{width:t,height:i}=ue,s=e.hittables.length,o=16-+(this.device.limits.maxComputeInvocationsPerWorkgroup<256)*8,[n,a]=this.createBuffers(e.createSpheresUniforms()),d=this.device.createBindGroupLayout({label:"Compute Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.COMPUTE},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},{binding:3,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:this.imageTexture.format}}]}),c=this.device.createPipelineLayout({bindGroupLayouts:[d],label:"Compute Pipeline Layout"}),l=this.device.createBuffer({label:"Compute Color Buffer",usage:GPUBufferUsage.STORAGE,size:t*i*16});this.computeBindGroup=this.device.createBindGroup({layout:d,label:"Compute Bind Group",entries:[{binding:0,resource:{buffer:this.tracerBuffer}},{binding:1,resource:{buffer:n}},{binding:2,resource:{buffer:a}},{binding:3,resource:{buffer:l}},{binding:4,resource:this.imageTexture.createView()}]});const h=this.device.createShaderModule({code:`const SPHERES = ${s}u;
${Xt}`,label:"Compute Shader"});this.computePipeline=this.device.createComputePipeline({layout:c,label:"Compute Pipeline",compute:{constants:{size:o},module:h,entryPoint:"mainCompute"}}),this.workgroupCount[0]=Math.ceil(t/o),this.workgroupCount[1]=Math.ceil(i/o),e.dispose()}createImagePipeline(e=!1){const t=e&&"Framebuffer Texture"||"CPU Computed Image",i=e&&GPUTextureUsage.STORAGE_BINDING||0,s=e&&"rgba16float"||"rgba8unorm";this.imageTexture=this.device.createTexture({size:[P,E],format:s,label:t,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|i});const o=this.device.createShaderModule({label:"Image Shader",code:jt});this.imagePipeline=this.device.createRenderPipeline({label:"Image Pipeline",layout:"auto",vertex:{entryPoint:"mainVertex",module:o},fragment:{targets:[{format:this.format}],entryPoint:"mainFragment",module:o}}),this.imageBindGroup=this.device.createBindGroup({layout:this.imagePipeline.getBindGroupLayout(0),label:"Image Bind Group",entries:[{binding:0,resource:this.imageTexture.createView()},{binding:1,resource:this.sampler}]})}drawImage(e){if(e)return this.setActiveTexture(e);const t=this.device.createCommandEncoder(),i=t.beginComputePass();this.tracer[1]=++this.samples,this.tracer[4]=Math.random()*4294967295,this.tracer[5]=Math.random()*4294967295,this.tracer[6]=Math.random()*4294967295,this.device.queue.writeBuffer(this.tracerBuffer,0,this.tracer),i.setPipeline(this.computePipeline),i.setBindGroup(0,this.computeBindGroup),i.dispatchWorkgroups(...this.workgroupCount),i.end();const s=t.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),storeOp:"store",loadOp:"clear"}]});s.setBindGroup(0,this.imageBindGroup),s.setPipeline(this.imagePipeline),s.draw(6),s.end(),this.samples<O&&requestAnimationFrame(this.draw),this.device.queue.submit([t.finish()]),u.dispatch("WebGPU::Stats::Update",{sample:this.samples})}createBuffers(e){this.tracer[0]=me,this.tracerBuffer=this.device.createBuffer({usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:"Compute Tracer Uniform",size:this.tracer.byteLength});const{u:t,v:i,origin:s,vertical:o,horizontal:n,lowerLeftCorner:a,lensRadius:d}=new je().uniform,c=new Float32Array(24),l=this.device.createBuffer({usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,label:"Compute Camera Storage Buffer",size:c.byteLength});c[0]=t[0],c[1]=t[1],c[2]=t[2],c[4]=i[0],c[5]=i[1],c[6]=i[2],c[8]=s[0],c[9]=s[1],c[10]=s[2],c[12]=o[0],c[13]=o[1],c[14]=o[2],c[16]=n[0],c[17]=n[1],c[18]=n[2],c[20]=a[0],c[21]=a[1],c[22]=a[2],c[23]=d,this.device.queue.writeBuffer(l,0,c);const h=new Float32Array(e.length*8),y=this.device.createBuffer({usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,label:"Compute Spheres Storage Buffer",size:h.byteLength});for(let w=0,m=0,B=e.length;w<B;w++,m+=8)h[m+0]=e[w].center[0],h[m+1]=e[w].center[1],h[m+2]=e[w].center[2],h[m+3]=e[w].radius,h[m+4]=e[w].material.albedo[0],h[m+5]=e[w].material.albedo[1],h[m+6]=e[w].material.albedo[2],h[m+7]=e[w].material.extra;return this.device.queue.writeBuffer(y,0,h),[l,y]}setActiveTexture(e){const t=this.device.createCommandEncoder(),{width:i,height:s}=ue;this.setImageData(e),this.device.queue.copyExternalImageToTexture({source:this.image,flipY:!0},{texture:this.imageTexture},{width:i,height:s});const o=t.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),storeOp:"store",loadOp:"clear"}]});o.setBindGroup(0,this.imageBindGroup),o.setPipeline(this.imagePipeline),o.draw(6),o.end(),this.device.queue.submit([t.finish()])}clear(){const e=this.device.createCommandEncoder(),t=Xe(this.clearColor,1),i=t.get("r")??0,s=t.get("g")??0,o=t.get("b")??0;e.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:[i,s,o,1],storeOp:"store",loadOp:"clear"}]}).end(),this.device.queue.submit([e.finish()])}get sampler(){return this.device.createSampler({addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",minFilter:"linear",magFilter:"linear"})}get ready(){return!!this.imagePipeline}}var $e=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
in vec2 position;in vec2 coords;out vec2 uv;void main(void){gl_Position=vec4((position*2.0-1.0)*vec2(1.0,-1.0),0.0,1.0);uv=coords;}`,Yt=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform sampler2D tex;in vec2 uv;out vec4 fragColor;void main(void){fragColor=texture(tex,uv);}`,Kt=`#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform sampler2D tex;varying vec2 uv;void main(void){gl_FragColor=texture2D(tex,uv);}`,Zt=`#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
attribute vec2 position;attribute vec2 coords;varying vec2 uv;void main(void){gl_Position=vec4((position*2.0-1.0)*vec2(1.0,-1.0),0.0,1.0);uv=coords;}`;class Qe extends ge{texture;program;constructor(e,t=Kt,i=Zt){super(e),this.createProgram(t,i),this.createScene(),this.clear()}loadShader(e,t){const i=this.context.createShader(t);return this.context.shaderSource(i,e),this.context.compileShader(i),this.context.getShaderParameter(i,this.context.COMPILE_STATUS)?i:(console.error(`An error occurred compiling the shaders: ${this.context.getShaderInfoLog(i)}`),this.context.deleteShader(i))}createProgram(e,t){const i=this.loadShader(e,this.context.FRAGMENT_SHADER),s=this.loadShader(t,this.context.VERTEX_SHADER);if(this.program=this.context.createProgram(),s&&i&&(this.context.attachShader(this.program,i),this.context.attachShader(this.program,s),this.context.linkProgram(this.program)),!this.context.getProgramParameter(this.program,this.context.LINK_STATUS))return console.error(`Unable to initialize shader program: ${this.context.getProgramInfoLog(this.program)}`);this.context.clear(this.context.COLOR_BUFFER_BIT);const o=Xe(this.clearColor,1),n=o.get("r")??0,a=o.get("g")??0,d=o.get("b")??0;this.context.clearColor(n,a,d,1),this.context.useProgram(this.program)}setTextureParameters(){this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.LINEAR),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.LINEAR)}setBufferData(){this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,1,1,0,1,0,0]),this.context.STATIC_DRAW)}setActiveTexture(e=this.textureData,t=this.texture){this.context.activeTexture(this.context.TEXTURE0),this.context.bindTexture(this.context.TEXTURE_2D,t),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.RGB,this.width,this.height,0,this.context.RGB,this.context.UNSIGNED_BYTE,e)}createScene(){const e=this.context.getAttribLocation(this.program,"coords");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(),this.context.enableVertexAttribArray(e),this.context.vertexAttribPointer(e,2,this.context.FLOAT,!1,0,0);const t=this.context.getAttribLocation(this.program,"position");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(),this.context.enableVertexAttribArray(t),this.context.vertexAttribPointer(t,2,this.context.FLOAT,!1,0,0),this.texture=this.context.createTexture(),this.setBufferData(),this.setActiveTexture(),this.setTextureParameters()}drawImage(e){this.setActiveTexture(e),this.context.drawArrays(this.context.TRIANGLES,0,6)}clear(){this.context.clear(this.context.COLOR_BUFFER_BIT)}}class Je extends Qe{samples=0;texture1;texture2;frameBuffer1;frameBuffer2;seedUniform;samplesUniform;draw=this.drawImage.bind(this,void 0);constructor(e,t=Yt){if(e.tracer!=="WebGL2")super(e,t,$e);else{const i=new Ke,s=i.hittables.length;super(e,t.replace("#version 300 es",`#version 300 es
#define SPHERES ${s}u`),$e),this.createUniforms(i.createSpheresUniforms()),this.createFrameBufferTextures(),i.dispose()}}bindFrameBufferTextures(e,t){this.context.bindFramebuffer(this.context.FRAMEBUFFER,e),this.context.framebufferTexture2D(this.context.FRAMEBUFFER,this.context.COLOR_ATTACHMENT0,this.context.TEXTURE_2D,t,0)}createFrameBufferTextures(){this.texture1=this.context.createTexture(),this.setActiveTexture(this.textureData,this.texture1),this.setTextureParameters(),this.texture2=this.context.createTexture(),this.setActiveTexture(null,this.texture2),this.setTextureParameters(),this.frameBuffer1=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer1,this.texture1),this.frameBuffer2=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer2,this.texture2)}createUniforms(e){this.seedUniform=this.context.getUniformLocation(this.program,"seed"),this.samplesUniform=this.context.getUniformLocation(this.program,"samples"),this.context.uniform1ui(this.context.getUniformLocation(this.program,"maxDepth"),me),this.context.uniform2f(this.context.getUniformLocation(this.program,"resolution"),this.width,this.height);const{u:t,v:i,origin:s,vertical:o,horizontal:n,lowerLeftCorner:a,lensRadius:d}=new je().uniform;this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.lowerLeftCorner"),a),this.context.uniform1f(this.context.getUniformLocation(this.program,"camera.lensRadius"),d),this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.horizontal"),n),this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.vertical"),o),this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.origin"),s),this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.v"),i),this.context.uniform3fv(this.context.getUniformLocation(this.program,"camera.u"),t);for(let c=0,l=e.length;c<l;c++){const h=this.context.getUniformLocation(this.program,`spheres[${c}].material`),y=this.context.getUniformLocation(this.program,`spheres[${c}].transform`);this.context.uniform4fv(h,[...e[c].material.albedo,e[c].material.extra]),this.context.uniform4fv(y,[...e[c].center,e[c].radius])}}drawImage(e){if(e)return super.drawImage(e);this.context.uniform3ui(this.seedUniform,Math.random()*4294967295,Math.random()*4294967295,Math.random()*4294967295),this.context.uniform1ui(this.samplesUniform,++this.samples),this.samples<O&&requestAnimationFrame(this.draw),this.context.bindFramebuffer(this.context.FRAMEBUFFER,this.frameBuffer2),this.context.bindTexture(this.context.TEXTURE_2D,this.texture1),this.context.drawArrays(this.context.TRIANGLES,0,6),this.context.bindFramebuffer(this.context.FRAMEBUFFER,null),this.context.bindTexture(this.context.TEXTURE_2D,this.texture2),this.context.drawArrays(this.context.TRIANGLES,0,6);const t=this.frameBuffer1;this.frameBuffer1=this.frameBuffer2,this.frameBuffer2=t;const i=this.texture1;this.texture1=this.texture2,this.texture2=i,u.dispatch("WebGL2::Stats::Update",{sample:this.samples})}}class Qt extends ge{constructor(e){super(e),this.clear(),this.context.imageSmoothingEnabled=!0,this.context.imageSmoothingQuality="high",this.image=this.context.getImageData(0,0,this.width,this.height)}drawImage(e){this.setImageData(e),this.context.putImageData(this.image,0,0)}clear(){this.context.fillStyle=Wt(this.clearColor),this.context.clearRect(0,0,this.width,this.height),this.context.fillRect(0,0,this.width,this.height)}}class et{sample=0;trace;format;collect;tracer;context;f32=new Float32Array(P*E*3);u8=new Uint8ClampedArray(P*E*3);canvas;worker;samples=O;constructor(e){this.canvas=this.createCanvas(e),this.tracer=this.getTracer(e),this.context=e.context,(this.worker=e.worker)?this.createWorkerEvents():this.loadTracer()}createCanvas(e){switch(e.context){case"WebGPU":return new Ze(e,e.worker?this.onCreateTracer.bind(this):this.onLoadTracer.bind(this));case"WebGL2":return new Je(e);case"WebGL":return new Qe(e);default:return new Qt(e)}}getTracer(e){return e.tracer!=="AssemblyScript"?"TypeScript":"AssemblyScript"}createWorkerEvents(){this.worker?.post("Create::Tracer",{tracer:this.tracer}),this.worker?.add("Create::Tracer",this.onCreateTracer.bind(this))}onCreateTracer(){this.canvasContextReady&&(this.worker?.add("Create::PPMImage",this.showPPMImage.bind(this)),u.dispatch(`${this.tracer}::Start`),this.createPPMImage())}loadTracer(){(this.tracer==="AssemblyScript"?Y(()=>import("./release-wdFuA3T3.js"),__vite__mapDeps([]),import.meta.url):Y(()=>import("./Tracer-dM9bd2Wm.js"),__vite__mapDeps([]),import.meta.url)).then(({trace:e,format:t,collect:i})=>{this.collect=i,this.format=t,this.trace=e,this.onLoadTracer()})}onLoadTracer(){this.canvasContextReady&&(u.dispatch(`${this.tracer}::Start`,null,!0),this.createPPMImage())}createPPMImage(e=!1){if(this.worker)return this.worker.post("Create::PPMImage",{download:e});this.tracer==="AssemblyScript"?(this.f32=Float32Array.from(this.trace(this.f32)),this.u8=Uint8ClampedArray.from(this.format(this.f32,this.u8,++this.sample)),!(this.sample%100)&&this.collect()):this.format(this.trace(this.f32),this.u8,++this.sample),this.showPPMImage({pixels:this.u8,sample:this.sample,download:e},!0)}showPPMImage(e,t){const i=e;this.canvas.drawImage(i.pixels),this.samples===i.sample||!(this.worker?i.sample:this.sample)?i.download&&this.downloadPPMImage(i.pixels,t):setTimeout(this.createPPMImage.bind(this,i.download),Bt),u.dispatch(`${this.tracer}::Stats::Update`,{sample:i.sample},t)}downloadPPMImage(e,t){let i=`P3
${this.canvas.width} ${this.canvas.height}
255
`;for(let s=0;s<e.length;s+=3)i+=`${e[s]} ${e[s+1]} ${e[s+2]}
`;u.dispatch("PPMImage::Download",{image:i},t)}get canvasContextReady(){return this.context==="WebGPU"?this.canvas.ready:!0}}var Jt=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
in vec2 uv;out vec4 fragColor;uniform uint samples;uniform uint maxDepth;uniform vec2 resolution;uniform sampler2D frame;struct Ray{vec3 origin;vec3 direction;};vec3 at(in Ray ray,in float t){return ray.origin+ray.direction*t;}
#define INFINITY 1.0 / 0.0
#define PI 3.14159265358979323846
uniform uvec3 seed;uvec3 rnd=uvec3(0);uvec3 depthSeed=uvec3(1);void initializeRandom(void){uvec3 A=uvec3(1741651*1009,140893*1609*13,6521*983*7*2);rnd=(depthSeed*A)^ seed;}float random(in vec2 seed){uvec3 C=uvec3(60493*9377,11279*2539*23,7919*631*5*3);rnd=(rnd*C)^(rnd.yzx>>uvec3(4u));return float(rnd.x ^ rnd.y)/4294967295.0;}float random(in vec2 seed,in float mi,in float ma){return random(seed)*(ma-mi)+mi;}float degToRad(in float deg){return deg*PI/180.0;}bool nearZero(in vec3 vec){return(abs(vec.x)<1e-8)&&(abs(vec.y)<1e-8)&&(abs(vec.z)<1e-8);}vec3 randomVec(in vec2 seed){return vec3(random(seed*0.123),random(seed*0.456),random(seed*0.789));}vec3 randomVec(in vec2 seed,in float mi,in float ma){return vec3(random(seed*0.123,mi,ma),random(seed*0.456,mi,ma),random(seed*0.789,mi,ma));}float lengthSquared(in vec3 vec){return dot(vec,vec);}vec3 randomUnitDisk(in vec2 seed){float rand=random(seed*0.02468);float x=rand*2.0-1.0;float y=random(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3(x,y,0.0);}vec3 randomUnitSphere(in vec2 seed){for(;;){vec3 rand=randomVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0)return rand;}}vec3 randomNormalized(in vec2 seed){return normalize(randomUnitSphere(seed));}vec3 randomHemisphere(in vec3 normal,in vec2 seed){vec3 unitSphere=randomUnitSphere(seed);return dot(unitSphere,normal)>0.0? unitSphere :-unitSphere;}struct Camera{vec3 u;vec3 v;vec3 origin;vec3 vertical;vec3 horizontal;vec3 lowerLeftCorner;float lensRadius;};Ray getRay(Camera camera,in float s,in float t,in vec2 seed){vec3 randomDisk=randomUnitDisk(seed)*camera.lensRadius;vec3 offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}uniform Camera camera;
#define LAMBERTIAN 0u
#define METAL 1u
#define DIELECTRIC 2u
struct Record{float t;vec3 point;vec3 normal;vec4 material;bool frontFace;}record;void setFaceNormal(const in Ray ray,const in vec3 outwardNormal){record.frontFace=dot(ray.direction,outwardNormal)<0.0;record.normal=record.frontFace ? outwardNormal :-outwardNormal;}struct Sphere{vec4 transform;vec4 material;};bool sphereHit(const in Ray ray,const in float tMin,const in float tMax,const in Sphere sphere){vec3 oc=ray.origin-sphere.transform.xyz;float a=lengthSquared(ray.direction);float halfB=dot(oc,ray.direction);float radius=sphere.transform.w;float c=lengthSquared(oc)-radius*radius;float d=halfB*halfB-a*c;if(d<0.0)return false;float sqrtD=sqrt(d);float root=(-halfB-sqrtD)/a;if(root<tMin||root>tMax){root=(-halfB+sqrtD)/a;if(root<tMin||root>tMax)return false;}record.t=root;record.point=at(ray,root);record.material=sphere.material;setFaceNormal(ray,(record.point-sphere.transform.xyz)/radius);return true;}uniform Sphere spheres[SPHERES];bool hitObject(const in Ray ray,const in float tMin,const in float tMax){bool hit=false;float closest=tMax;for(uint s=0u;s<SPHERES;s++)if(sphereHit(ray,tMin,closest,spheres[s])){closest=record.t;hit=true;}return hit;}bool metalScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 reflected=reflect(normalize(ray.direction),record.normal);reflected+=randomUnitSphere(seed)*material.a;scattered=Ray(record.point,reflected);attenuation=material.rgb;return dot(scattered.direction,record.normal)>0.0;}float reflectance(in float cosine,in float ratio){float reflectance=(1.0-ratio)/(1.0+ratio);reflectance=reflectance*reflectance;return pow((1.0-cosine),5.0)*(1.0-reflectance)+reflectance;}bool dielectricScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 direction=normalize(ray.direction);float tCos=min(dot(-direction,record.normal),1.0);float ratio=record.frontFace ? 1.0/material.a : material.a;bool willReflect=sqrt(1.0-tCos*tCos)*ratio>1.0||random(seed)<reflectance(tCos,ratio);direction=willReflect? reflect(direction,record.normal): refract(direction,record.normal,ratio);scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}bool lambertianScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed){vec3 direction=record.normal+randomNormalized(seed);if(nearZero(direction))direction=record.normal;scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}
#define WHITE vec3(1.0, 1.0, 1.0)
#define SKY vec3(0.5, 0.7, 1.0)
vec3 skyColor(in Ray ray){vec3 direction=normalize(ray.direction);float t=(direction.y+1.0)*0.5;return(1.0-t)*WHITE+SKY*t;}vec3 getColor(in Ray ray,uint depth,in vec2 seed){vec3 color=WHITE;for(uint d=depth;d>0u;d--){uint x=depth-d;depthSeed=uvec3(x,d,x*d);if(hitObject(ray,0.001,INFINITY)){Ray scattered;vec3 attenuation;bool scatter=false;scatter=record.material.a>1.0? dielectricScatter(attenuation,scattered,record.material,seed,ray): record.material.a>-1.0? metalScatter(attenuation,scattered,record.material,seed,ray): lambertianScatter(attenuation,scattered,record.material,seed);if(scatter){color*=attenuation;ray=scattered;}}else{color*=skyColor(ray);break;}}return color;}void inputColor(inout vec3 color,const in uint samples){color*=color;color*=float(samples-1u);}void outputColor(inout vec3 color,const in uint samples){color/=float(samples);color=sqrt(color);}void main(void){vec2 mappedUV=vec2(uv.x,1.0-uv.y);vec3 color=texture(frame,mappedUV).rgb;initializeRandom();inputColor(color,samples);vec2 coord=mappedUV*resolution;vec2 seed=uv*coord*float(samples);float u=(coord.x+random(seed))/resolution.x;float v=(coord.y+random(seed))/resolution.y;Ray ray=getRay(camera,u,v,seed);color+=getColor(ray,maxDepth,seed);outputColor(color,samples);fragColor=vec4(color,1.0);}`;class er{canvas;constructor(e){u.dispatch(`${e.tracer}::Start`),this.canvas=this.createCanvas(e)}createCanvas(e){switch(e.context){case"WebGPU":return new Ze(e,this.onContextReady.bind(this));default:{const t=new Je(e,Jt);return t.drawImage(),t}}}onContextReady(){this.canvas.drawImage()}}let ae=0,Ge,De,Fe,ce=new Float32Array(P*E*3),le=new Uint8ClampedArray(P*E*3);self.onerror=r=>console.error(r);self.onmessage=async r=>{const{event:e}=r.data;let{params:t}=r.data;switch(e){case"Transfer::Offscreen":return new et({offscreen:!0,...t});case"Create::Tracer":{const i=await(t.tracer==="AssemblyScript"?Y(()=>import("./release-wdFuA3T3.js"),__vite__mapDeps([]),import.meta.url):Y(()=>import("./Tracer-dM9bd2Wm.js"),__vite__mapDeps([]),import.meta.url));Fe=i.collect,De=i.format,Ge=i.trace;break}case"Create::PPMImage":{ce=new Float32Array(Ge(ce)),le=new Uint8ClampedArray(De(ce,le,++ae)),t={sample:ae,pixels:le,...t},!(ae%100)&&Fe();break}}self.postMessage({response:t,name:e})};const tr=self;let rr=class extends CustomEvent{data};class ir{target=new EventTarget;events=new Map;callbacks=new Map;add(e,t){const i=this.callbacks.get(e);i?i.push(t):this.callbacks.set(e,[t]),this.events.set(e,new rr(e)),this.target.addEventListener(e,t,!1)}dispatch(e,t){const i=this.events.get(e);i&&(i.data=t,this.target.dispatchEvent(i))}remove(e,t){const i=this.callbacks.get(e);if(i&&t){const s=i.indexOf(t),o=t;s!==-1&&i.splice(s,1),this.target.removeEventListener(e,o,!1)}t||(i?.forEach(s=>this.target.removeEventListener(e,s,!1)),this.callbacks.delete(e),this.events.delete(e))}dispose(){this.callbacks.clear(),this.events.clear()}}class Ne{constructor(e){this.worker=e}add(e,t){this.worker.add(e,t)}static dispatch(e,t){tr.postMessage({name:e,response:{data:t}})}remove(e){this.worker.remove(e)}dispose(){this.worker.dispose()}}class sr extends ir{offscreen=!1;workerEvents;createWorkerEvents(e,t){this.workerEvents=new Ne(e),this.offscreen=t}add(e,t){this.offscreen?this.workerEvents?.add(e,t):super.add(e,t)}dispatch(e,t,i=!1){i?Ne.dispatch(e,t):super.dispatch(e,t)}remove(e,t){this.offscreen?this.workerEvents?.remove(e):super.remove(e,t)}dispose(){this.workerEvents?.dispose(),super.dispose()}}const u=new sr,or="_container_23ksy_1",nr="_stats_23ksy_6",de={container:or,stats:nr},ar=_("<div>"),cr=_("<strong>"),lr=_("<ul><li><strong>Processing: </strong><em></em></li><li><strong>Context: </strong><em></em></li><li><strong>Language: </strong><em></em></li><li><strong>Environment: </strong><em></em></li><li><strong>Samples: </strong><em> / </em></li><li><strong>Last Render Time: </strong><em>~<!> sec.</em></li><li><strong>Total Render Time: </strong><em>~<!> sec."),k=r=>{let e=Date.now(),t=Date.now();const[i,s]=A(""),[o,n]=A(0),[a,d]=A(!1),[c,l]=A(0),[h,y]=A(0),w=r.children,{tracer:m,processing:B,context:tt}=w.dataset,ve=T=>s(T.data),rt=()=>d(!a()),xe=()=>t=Date.now(),be=T=>{const $=Date.now(),{sample:S}=T.data;y(Le(($-t)/1e3)),l(Le(($-e)/1e3)),n(S),e=$};return u.add(`${m}::Start`,xe),u.add(`${m}::Init::Fail`,ve),u.add(`${m}::Stats::Update`,be),Et(()=>{u.remove(`${m}::Start`,xe),u.add(`${m}::Init::Fail`,ve),u.remove(`${m}::Stats::Update`,be)}),(()=>{const T=ar();return T.$$click=rt,x(T,()=>r.children,null),x(T,(()=>{const $=wt(()=>!!i());return()=>$()?(()=>{const S=cr();return x(S,i),I(()=>te(S,de.stats)),S})():(()=>{const S=lr(),ye=S.firstChild,it=ye.firstChild,st=it.nextSibling,we=ye.nextSibling,ot=we.firstChild,nt=ot.nextSibling,Se=we.nextSibling,at=Se.firstChild,ct=at.nextSibling,Ee=Se.nextSibling,lt=Ee.firstChild,dt=lt.nextSibling,Pe=Ee.nextSibling,ht=Pe.firstChild,Q=ht.nextSibling,ut=Q.firstChild,Te=Pe.nextSibling,ft=Te.firstChild,Ce=ft.nextSibling,mt=Ce.firstChild,Re=mt.nextSibling;Re.nextSibling;const pt=Te.nextSibling,gt=pt.firstChild,Ue=gt.nextSibling,vt=Ue.firstChild,_e=vt.nextSibling;return _e.nextSibling,x(st,B),x(nt,tt),x(ct,B==="CPU"?m:m==="WebGL2"?"GLSL ES 3.0":"WGSL"),x(dt,()=>B==="GPU"?"Client":r.offscreen?"OffscreenCanvas":"Web Worker"),x(Q,o,ut),x(Q,O,null),x(Ce,c,Re),x(Ue,h,_e),I(G=>{const Me=de.stats,J=+a();return Me!==G._v$&&te(S,G._v$=Me),J!==G._v$2&&((G._v$2=J)!=null?S.style.setProperty("opacity",J):S.style.removeProperty("opacity")),G},{_v$:void 0,_v$2:void 0}),S})()})(),null),I(()=>te(T,de.container)),T})()};Mt(["click"]);const dr=(r,e="image")=>{const t=document.createElement("a");t.href=URL.createObjectURL(new Blob([r],{type:"text/plain; charset=UTF-8"})),t.download=`${e}.ppm`,t.click(),URL.revokeObjectURL(t.href)};function hr(r){return new Worker(""+new URL("worker-ahM9C77p.js",import.meta.url).href,{type:"module",name:r?.name})}class ur{worker=new hr;events=new Map;constructor(){this.worker.onmessage=this.onMessage.bind(this),this.worker.onerror=this.onError.bind(this)}add(e,t,i){this.events.set(e,{callback:t,params:i})}transfer(e,t){this.worker.postMessage({event:"Transfer::Offscreen",params:{canvas:e,...t}},[e])}post(e,t){const i=this.events.get(e)?.params;this.worker.postMessage({event:e,params:{...i,...t}})}onMessage(e){const{name:t,response:i}=e.data;this.events?.get(t)?.callback?.(i)}onError(e){console.error(e)}remove(e){this.events.delete(e)}dispose(){this.events.clear()}}class fr{offscreen=typeof HTMLCanvasElement<"u"&&!!HTMLCanvasElement.prototype.transferControlToOffscreen;constructor(e){e.forEach(t=>{const{processing:i,tracer:s}=t.dataset,o=t.dataset.context;if(i==="GPU")return new er({canvas:t,context:o,tracer:s});const n=new ur;return u.createWorkerEvents(n,this.offscreen),this.offscreen?(u.add("PPMImage::Download",this.downloadPPMImage.bind(this)),u.add("AssemblyScript::Stats::Update",a=>this.updateStats(a,"AssemblyScript")),u.add("TypeScript::Stats::Update",a=>this.updateStats(a,"TypeScript")),u.add("AssemblyScript::Start",this.startStats.bind(this,"AssemblyScript")),u.add("TypeScript::Start",this.startStats.bind(this,"TypeScript")),n.transfer(t.transferControlToOffscreen(),{tracer:s,context:o})):new et({canvas:t,context:o,worker:n,tracer:s})}),!this.offscreen&&u.add("PPMImage::Download",this.downloadPPMImage.bind(this))}updateStats(e,t){this.offscreen&&u.dispatch(`${t}::Stats::Update`,e.data)}downloadPPMImage(e){dr(e.data.image)}startStats(e){this.offscreen&&u.dispatch(`${e}::Start`)}}const mr=_("<canvas data-tracer=TypeScript data-context=Canvas2D data-processing=CPU>"),pr=_("<canvas data-tracer=AssemblyScript data-processing=CPU data-context=WebGL>"),gr=_("<canvas data-processing=GPU data-context=WebGL2 data-tracer=WebGL2>"),vr=_("<canvas data-processing=GPU data-context=WebGPU data-tracer=WebGPU>"),xr=_("<section>"),br=()=>{let r,e,t,i;const[s,o]=A(!1);let n;return St(()=>{const{width:a,height:d}=ue,c=n;c.style.setProperty("--width",`${a}px`),c.style.setProperty("--height",`${d}px`),c.style.setProperty("--ratio",`${a} / ${d}`),o(new fr([r,e,t,i]).offscreen)}),(()=>{const a=xr(),d=n;return typeof d=="function"?D(d,a):n=a,x(a,F(k,{get offscreen(){return s()},get children(){const c=mr(),l=t;return typeof l=="function"?D(l,c):t=c,R(c,"height",E),R(c,"width",P),c}}),null),x(a,F(k,{get offscreen(){return s()},get children(){const c=pr(),l=i;return typeof l=="function"?D(l,c):i=c,R(c,"height",E),R(c,"width",P),c}}),null),x(a,F(k,{get children(){const c=gr(),l=r;return typeof l=="function"?D(l,c):r=c,R(c,"height",E),R(c,"width",P),c}}),null),x(a,F(k,{get children(){const c=vr(),l=e;return typeof l=="function"?D(l,c):e=c,R(c,"height",E),R(c,"width",P),c}}),null),a})()};_t(()=>F(br,{}),document.getElementById("root"));export{je as C,v as R,f as V,Ke as W,Y as _,yr as f,E as h,me as m,P as w};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}