async function T(s,w={}){const h={env:Object.assign(Object.create(globalThis),w.env||{},{abort(t,e,n,r){t=b(t>>>0),e=b(e>>>0),n=n>>>0,r=r>>>0,(()=>{throw Error(`${t} in ${e}:${n}:${r}`)})()},seed(){return(()=>Date.now()*Math.random())()}})},{exports:a}=await WebAssembly.instantiate(s,h),i=a.memory||w.env.memory,m=Object.setPrototypeOf({trace(t){return t=_(Float32Array,5,2,t)||y(),d(Float32Array,a.trace(t)>>>0)},format(t,e,n){t=U(_(Uint8ClampedArray,4,0,t)||y()),e=_(Float32Array,5,2,e)||y();try{return d(Uint8ClampedArray,a.format(t,e,n)>>>0)}finally{g(t)}}},a);function b(t){if(!t)return null;const e=t+new Uint32Array(i.buffer)[t-4>>>2]>>>1,n=new Uint16Array(i.buffer);let r=t>>>1,o="";for(;e-r>1024;)o+=String.fromCharCode(...n.subarray(r,r+=1024));return o+String.fromCharCode(...n.subarray(r,e))}function d(t,e){return e?new t(i.buffer,E(e+4),f.getUint32(e+8,!0)/t.BYTES_PER_ELEMENT).slice():null}function _(t,e,n,r){if(r==null)return 0;const o=r.length,c=a.__pin(a.__new(o<<n,1))>>>0,l=a.__new(12,e)>>>0;return A(l+0,c),f.setUint32(l+4,c,!0),f.setUint32(l+8,o<<n,!0),new t(i.buffer,c,o).set(r),a.__unpin(c),l}const u=new Map;function U(t){if(t){const e=u.get(t);e?u.set(t,e+1):u.set(a.__pin(t),1)}return t}function g(t){if(t){const e=u.get(t);if(e===1)a.__unpin(t),u.delete(t);else if(e)u.set(t,e-1);else throw Error(`invalid refcount '${e}' for reference '${t}'`)}}function y(){throw TypeError("value must not be null")}let f=new DataView(i.buffer);function A(t,e){try{f.setUint32(t,e,!0)}catch{f=new DataView(i.buffer),f.setUint32(t,e,!0)}}function E(t){try{return f.getUint32(t,!0)}catch{return f=new DataView(i.buffer),f.getUint32(t,!0)}}return m}const{memory:C,trace:$,format:S}=await(async s=>T(await(async()=>{try{return await globalThis.WebAssembly.compileStreaming(globalThis.fetch(s))}catch{return globalThis.WebAssembly.compile(await(await import("./__vite-browser-external-4ed993c7.js")).readFile(s))}})(),{}))(new URL(""+new URL("release-a3d495f2.wasm",import.meta.url).href,self.location));export{S as format,C as memory,$ as trace};
