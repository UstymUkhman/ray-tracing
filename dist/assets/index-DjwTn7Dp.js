(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();const pt=(r,e)=>r===e,z={equals:pt};let Fe=ze;const _=1,W=2,Ne={owned:null,cleanups:null,context:null,owner:null};var f=null;let ee=null,u=null,x=null,P=null,X=0;function vt(r,e){const t=u,i=f,n=r.length===0,s=e===void 0?i:e,o=n?Ne:{owned:null,cleanups:null,context:s?s.context:null,owner:s},a=n?r:()=>r(()=>I(()=>Y(o)));f=o,u=null;try{return F(a,!0)}finally{u=t,f=i}}function U(r,e){e=e?Object.assign({},z,e):z;const t={value:r,observers:null,observerSlots:null,comparator:e.equals||void 0},i=n=>(typeof n=="function"&&(n=n(t.value)),Oe(t,n));return[ke.bind(t),i]}function M(r,e,t){const i=ue(r,e,!1,_);B(i)}function gt(r,e,t){Fe=Tt;const i=ue(r,e,!1,_);(!t||!t.render)&&(i.user=!0),P?P.push(i):B(i)}function xt(r,e,t){t=t?Object.assign({},z,t):z;const i=ue(r,e,!0,0);return i.observers=null,i.observerSlots=null,i.comparator=t.equals||void 0,B(i),ke.bind(i)}function I(r){if(u===null)return r();const e=u;u=null;try{return r()}finally{u=e}}function bt(r){gt(()=>I(r))}function wt(r){return f===null||(f.cleanups===null?f.cleanups=[r]:f.cleanups.push(r)),r}function ke(){if(this.sources&&this.state)if(this.state===_)B(this);else{const r=x;x=null,F(()=>V(this),!1),x=r}if(u){const r=this.observers?this.observers.length:0;u.sources?(u.sources.push(this),u.sourceSlots.push(r)):(u.sources=[this],u.sourceSlots=[r]),this.observers?(this.observers.push(u),this.observerSlots.push(u.sources.length-1)):(this.observers=[u],this.observerSlots=[u.sources.length-1])}return this.value}function Oe(r,e,t){let i=r.value;return(!r.comparator||!r.comparator(i,e))&&(r.value=e,r.observers&&r.observers.length&&F(()=>{for(let n=0;n<r.observers.length;n+=1){const s=r.observers[n],o=ee&&ee.running;o&&ee.disposed.has(s),(o?!s.tState:!s.state)&&(s.pure?x.push(s):P.push(s),s.observers&&We(s)),o||(s.state=_)}if(x.length>1e6)throw x=[],new Error},!1)),e}function B(r){if(!r.fn)return;Y(r);const e=X;yt(r,r.value,e)}function yt(r,e,t){let i;const n=f,s=u;u=f=r;try{i=r.fn(e)}catch(o){return r.pure&&(r.state=_,r.owned&&r.owned.forEach(Y),r.owned=null),r.updatedAt=t+1,qe(o)}finally{u=s,f=n}(!r.updatedAt||r.updatedAt<=t)&&(r.updatedAt!=null&&"observers"in r?Oe(r,i):r.value=i,r.updatedAt=t)}function ue(r,e,t,i=_,n){const s={fn:r,state:i,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:f,context:f?f.context:null,pure:t};return f===null||f!==Ne&&(f.owned?f.owned.push(s):f.owned=[s]),s}function q(r){if(r.state===0)return;if(r.state===W)return V(r);if(r.suspense&&I(r.suspense.inFallback))return r.suspense.effects.push(r);const e=[r];for(;(r=r.owner)&&(!r.updatedAt||r.updatedAt<X);)r.state&&e.push(r);for(let t=e.length-1;t>=0;t--)if(r=e[t],r.state===_)B(r);else if(r.state===W){const i=x;x=null,F(()=>V(r,e[0]),!1),x=i}}function F(r,e){if(x)return r();let t=!1;e||(x=[]),P?t=!0:P=[],X++;try{const i=r();return St(t),i}catch(i){t||(P=null),x=null,qe(i)}}function St(r){if(x&&(ze(x),x=null),r)return;const e=P;P=null,e.length&&F(()=>Fe(e),!1)}function ze(r){for(let e=0;e<r.length;e++)q(r[e])}function Tt(r){let e,t=0;for(e=0;e<r.length;e++){const i=r[e];i.user?r[t++]=i:q(i)}for(e=0;e<t;e++)q(r[e])}function V(r,e){r.state=0;for(let t=0;t<r.sources.length;t+=1){const i=r.sources[t];if(i.sources){const n=i.state;n===_?i!==e&&(!i.updatedAt||i.updatedAt<X)&&q(i):n===W&&V(i,e)}}}function We(r){for(let e=0;e<r.observers.length;e+=1){const t=r.observers[e];t.state||(t.state=W,t.pure?x.push(t):P.push(t),t.observers&&We(t))}}function Y(r){let e;if(r.sources)for(;r.sources.length;){const t=r.sources.pop(),i=r.sourceSlots.pop(),n=t.observers;if(n&&n.length){const s=n.pop(),o=t.observerSlots.pop();i<n.length&&(s.sourceSlots[o]=i,n[i]=s,t.observerSlots[i]=o)}}if(r.owned){for(e=r.owned.length-1;e>=0;e--)Y(r.owned[e]);r.owned=null}if(r.cleanups){for(e=r.cleanups.length-1;e>=0;e--)r.cleanups[e]();r.cleanups=null}r.state=0}function Et(r){return r instanceof Error?r:new Error(typeof r=="string"?r:"Unknown error",{cause:r})}function qe(r,e=f){throw Et(r)}function G(r,e){return I(()=>r(e||{}))}function Pt(r,e,t){let i=t.length,n=e.length,s=i,o=0,a=0,d=e[n-1].nextSibling,c=null;for(;o<n||a<s;){if(e[o]===t[a]){o++,a++;continue}for(;e[n-1]===t[s-1];)n--,s--;if(n===o){const l=s<i?a?t[a-1].nextSibling:t[s-a]:d;for(;a<s;)r.insertBefore(t[a++],l)}else if(s===a)for(;o<n;)(!c||!c.has(e[o]))&&e[o].remove(),o++;else if(e[o]===t[s-1]&&t[a]===e[n-1]){const l=e[--n].nextSibling;r.insertBefore(t[a++],e[o++].nextSibling),r.insertBefore(t[--s],l),e[n]=t[s]}else{if(!c){c=new Map;let m=a;for(;m<s;)c.set(t[m],m++)}const l=c.get(e[o]);if(l!=null)if(a<l&&l<s){let m=o,S=1,N;for(;++m<n&&m<s&&!((N=c.get(e[m]))==null||N!==l+S);)S++;if(S>l-a){const T=e[o];for(;a<l;)r.insertBefore(t[a++],T)}else r.replaceChild(t[a++],e[o++])}else o++;else e[o++].remove()}}}const Ae="_$DX_DELEGATE";function Ct(r,e,t,i={}){let n;return vt(s=>{n=s,e===document?r():g(e,r(),e.firstChild?null:void 0,t)},i.owner),()=>{n(),e.textContent=""}}function R(r,e,t){let i;const n=()=>{const o=document.createElement("template");return o.innerHTML=r,t?o.content.firstChild.firstChild:o.content.firstChild},s=e?()=>I(()=>document.importNode(i||(i=n()),!0)):()=>(i||(i=n())).cloneNode(!0);return s.cloneNode=s,s}function _t(r,e=window.document){const t=e[Ae]||(e[Ae]=new Set);for(let i=0,n=r.length;i<n;i++){const s=r[i];t.has(s)||(t.add(s),e.addEventListener(s,Rt))}}function C(r,e,t){t==null?r.removeAttribute(e):r.setAttribute(e,t)}function te(r,e){e==null?r.removeAttribute("class"):r.className=e}function L(r,e,t){return I(()=>r(e,t))}function g(r,e,t,i){if(t!==void 0&&!i&&(i=[]),typeof e!="function")return H(r,e,i,t);M(n=>H(r,e(),n,t),i)}function Rt(r){const e=`$$${r.type}`;let t=r.composedPath&&r.composedPath()[0]||r.target;for(r.target!==t&&Object.defineProperty(r,"target",{configurable:!0,value:t}),Object.defineProperty(r,"currentTarget",{configurable:!0,get(){return t||document}});t;){const i=t[e];if(i&&!t.disabled){const n=t[`${e}Data`];if(n!==void 0?i.call(t,n,r):i.call(t,r),r.cancelBubble)return}t=t._$host||t.parentNode||t.host}}function H(r,e,t,i,n){for(;typeof t=="function";)t=t();if(e===t)return t;const s=typeof e,o=i!==void 0;if(r=o&&t[0]&&t[0].parentNode||r,s==="string"||s==="number")if(s==="number"&&(e=e.toString()),o){let a=t[0];a&&a.nodeType===3?a.data=e:a=document.createTextNode(e),t=A(r,t,i,a)}else t!==""&&typeof t=="string"?t=r.firstChild.data=e:t=r.textContent=e;else if(e==null||s==="boolean")t=A(r,t,i);else{if(s==="function")return M(()=>{let a=e();for(;typeof a=="function";)a=a();t=H(r,a,t,i)}),()=>t;if(Array.isArray(e)){const a=[],d=t&&Array.isArray(t);if(ce(a,e,t,n))return M(()=>t=H(r,a,t,i,!0)),()=>t;if(a.length===0){if(t=A(r,t,i),o)return t}else d?t.length===0?Ue(r,a,i):Pt(r,t,a):(t&&A(r),Ue(r,a));t=a}else if(e.nodeType){if(Array.isArray(t)){if(o)return t=A(r,t,i,e);A(r,t,null,e)}else t==null||t===""||!r.firstChild?r.appendChild(e):r.replaceChild(e,r.firstChild);t=e}}return t}function ce(r,e,t,i){let n=!1;for(let s=0,o=e.length;s<o;s++){let a=e[s],d=t&&t[s],c;if(!(a==null||a===!0||a===!1))if((c=typeof a)=="object"&&a.nodeType)r.push(a);else if(Array.isArray(a))n=ce(r,a,d)||n;else if(c==="function")if(i){for(;typeof a=="function";)a=a();n=ce(r,Array.isArray(a)?a:[a],Array.isArray(d)?d:[d])||n}else r.push(a),n=!0;else{const l=String(a);d&&d.nodeType===3&&d.data===l?r.push(d):r.push(document.createTextNode(l))}}return n}function Ue(r,e,t=null){for(let i=0,n=e.length;i<n;i++)r.insertBefore(e[i],t)}function A(r,e,t,i){if(t===void 0)return r.textContent="";const n=i||document.createTextNode("");if(e.length){let s=!1;for(let o=e.length-1;o>=0;o--){const a=e[o];if(n!==a){const d=a.parentNode===r;!s&&!o?d?r.replaceChild(n,a):r.insertBefore(n,t):d&&a.remove()}else s=!0}}else r.insertBefore(n,t);return[n]}const Ve=50,Z=500,b=240,w=360,At=!1,le=Object.freeze(Object.defineProperty({__proto__:null,height:b,log:At,maxDepth:Ve,samples:Z,width:w},Symbol.toStringTag,{value:"Module"})),re=(r,e=0,t=1)=>Math.max(e,Math.min(r,t)),O=(r,e)=>Math.random()*(e-r)+r,fr=r=>r*Math.PI/180,Me=(r,e=3)=>{const t=Math.pow(10,e);return~~(t*r)/t},Ut=1/.06,Mt="modulepreload",It=function(r,e){return new URL(r,e).href},Ie={},j=function(e,t,i){let n=Promise.resolve();if(t&&t.length>0){const s=document.getElementsByTagName("link");n=Promise.all(t.map(o=>{if(o=It(o,i),o in Ie)return;Ie[o]=!0;const a=o.endsWith(".css"),d=a?'[rel="stylesheet"]':"";if(!!i)for(let m=s.length-1;m>=0;m--){const S=s[m];if(S.href===o&&(!a||S.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${o}"]${d}`))return;const l=document.createElement("link");if(l.rel=a?"stylesheet":Mt,a||(l.as="script",l.crossOrigin=""),l.href=o,document.head.appendChild(l),a)return new Promise((m,S)=>{l.addEventListener("load",m),l.addEventListener("error",()=>S(new Error(`Unable to preload CSS for ${o}`)))})}))}return n.then(()=>e()).catch(s=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=s,window.dispatchEvent(o),!o.defaultPrevented)throw s})};class p{vec=[0,0,0];constructor(e=0,t=e,i=e){this.vec[0]=e,this.vec[1]=t,this.vec[2]=i}refract(e,t){const i=Math.min(this.clone.negate.dot(e),1);this.copy(e.clone.multiply(i).add(this).multiply(t));const n=Math.abs(1-this.lengthSquared);return this.add(e.multiply(-Math.sqrt(n)))}set(e,t,i){return this.vec[0]=e,this.vec[1]=t,this.vec[2]=i,this}multiply(e){if(typeof e!="number")return this.set(this.vec[0]*e.x,this.vec[1]*e.y,this.vec[2]*e.z);const t=e;return this.vec[0]*=t,this.vec[1]*=t,this.vec[2]*=t,this}divide(e){return typeof e=="number"?this.multiply(1/e):this.set(this.vec[0]/e.x,this.vec[1]/e.y,this.vec[2]/e.z)}random(e=0,t=1){return this.set(O(e,t),O(e,t),O(e,t))}reflect(e){return this.sub(e.clone.multiply(this.dot(e)*2))}get randomNormalized(){return this.randomUnitSphere.normalize}get randomUnitSphere(){for(;;)if(this.random(-1).lengthSquared<1)return this}get lengthSquared(){return this.dot(this)}get randomUnitDisk(){for(;;)if(this.random(-1),this.vec[2]=0,this.lengthSquared<1)return this}cross(e){return this.set(this.vec[1]*e.z-this.vec[2]*e.y,this.vec[2]*e.x-this.vec[0]*e.z,this.vec[0]*e.y-this.vec[1]*e.x)}dot(e){return this.vec[0]*e.x+this.vec[1]*e.y+this.vec[2]*e.z}copy(e){const{x:t,y:i,z:n}=e;return this.set(t,i,n)}add(e){return this.vec[0]+=e.x,this.vec[1]+=e.y,this.vec[2]+=e.z,this}sub(e){return this.vec[0]-=e.x,this.vec[1]-=e.y,this.vec[2]-=e.z,this}get nearZero(){return Math.abs(this.vec[0])<1e-8&&Math.abs(this.vec[1])<1e-8&&Math.abs(this.vec[2])<1e-8}get normalize(){return this.divide(this.length)}get length(){return Math.sqrt(this.lengthSquared)}get clone(){return new p(this.vec[0],this.vec[1],this.vec[2])}reset(e=0){return this.set(e,e,e)}get negate(){return this.multiply(-1)}get sqrt(){return this.set(Math.sqrt(this.vec[0]),Math.sqrt(this.vec[1]),Math.sqrt(this.vec[2]))}get rgb(){return this.set(re(this.vec[0]*256|0,0,255),re(this.vec[1]*256|0,0,255),re(this.vec[2]*256|0,0,255))}get x(){return this.vec[0]}get y(){return this.vec[1]}get z(){return this.vec[2]}get(){return[...this.vec]}}const He=(r,e=1)=>new Map([["r",r>>16&e],["g",r>>8&e],["b",r&e]]),$t=(r,e)=>r.divide(e).sqrt.rgb,Dt=r=>`#${`000000${r.toString(16)}`.slice(-6)}`,mr=(r,e,t)=>{const i=new p;for(let n=0;n<r.length;n+=3){const{x:s,y:o,z:a}=$t(i.set(r[n],r[n+1],r[n+2]),t);e[n]=s,e[n+1]=o,e[n+2]=a}return e};class fe{textureData;context;image;clearColor=0;height;width;constructor(e){const{canvas:t,context:i,offscreen:n}=e;this.width=t.width,this.height=t.height,this.context=t.getContext(this.getContextId(i),this.getOptions(i,n)),this.textureData=new Uint8ClampedArray(this.width*this.height*4),this.image=new ImageData(this.textureData,this.width,this.height)}getContextId(e){switch(e){case"WebGPU":return"webgpu";case"WebGL2":return"webgl2";case"WebGL":return"webgl";default:return"2d"}}getOptions(e,t=!1){switch(e){case"WebGPU":return;case"Canvas2D":return{willReadFrequently:!t,desynchronized:t,colorSpace:"srgb",alpha:!1};default:return{powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0,preserveDrawingBuffer:!1,desynchronized:!t,premultipliedAlpha:!1,antialias:!0,stencil:!1,depth:!1,alpha:!0}}}setImageData(e){for(let t=0,i=0;t<e.length;t+=3,i+=4)this.image.data[i]=e[t],this.image.data[i+1]=e[t+1],this.image.data[i+2]=e[t+2],this.image.data[i+3]=255}}var Lt="override size: u32;@group(0)@binding(0)var framebuffer: texture_storage_2d<rgba16float,write>;@compute @workgroup_size(size,size)fn mainCompute(@builtin(global_invocation_id)invocation_id: vec3u){if(all(invocation_id.xy<textureDimensions(framebuffer))){let uv=vec2f(invocation_id.xy)/vec2f(textureDimensions(framebuffer).xy);textureStore(framebuffer,invocation_id.xy,vec4f(uv,0.25,1.0));}}",Gt="struct VertexOutput{@location(0)coords: vec2f,@builtin(position)position: vec4f};@vertex fn mainVertex(@builtin(vertex_index)index: u32)->VertexOutput{let position=array(vec2f(0.0,1.0),vec2f(1.0,1.0),vec2f(0.0,0.0),vec2f(0.0,0.0),vec2f(1.0,0.0),vec2f(1.0,1.0));var output: VertexOutput;let coords=position[index];output.position=vec4f(coords*2-1,0,1);output.coords=coords;return output;}@group(0)@binding(0)var texture: texture_2d<f32>;@group(0)@binding(1)var textureSampler: sampler;@fragment fn mainFragment(@location(0)coords: vec2f)->@location(0)vec4f{return textureSample(texture,textureSampler,coords);}";class je extends fe{device;adapter;format;imageTexture;imageBindGroup;imagePipeline;tracerBindGroup;computeBindGroup;tracerPipeline;computePipeline;workgroupCount=[0,0];constructor(e,t,i=Gt){super(e),this.initializeWebGPU().then(this.createRenderPipeline.bind(this,i,e.tracer,t)).catch(n=>h.dispatch("WebGPU::Init::Fail",n.message))}async initializeWebGPU(){if(!this.context)throw new Error("Failed to initialize WebGPU context.");if(!navigator.gpu)throw new Error("WebGPU is not supported on this browser.");const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance",forceFallbackAdapter:!1});if(e)this.adapter=e;else throw new Error("No appropriate GPUAdapter found.");const t=[];if(this.format=navigator.gpu.getPreferredCanvasFormat(),this.format==="bgra8unorm"&&t.push("bgra8unorm-storage"),!this.adapter.features.has("bgra8unorm-storage"))throw new Error('"bgra8unorm-storage" is not supported on this GPUAdapter.');this.device=await this.adapter.requestDevice({requiredFeatures:t}),this.context.configure({usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.STORAGE_BINDING,device:this.device,format:this.format})}createRenderPipeline(e,t,i){this.clear(),t==="WebGPU"?this.createTracerPipeline(e):this.createImagePipeline(e),i?.()}createComputePipeline(e=16){const t=this.device.createTexture({size:[w,b],label:"Framebuffer Texture",format:"rgba16float",usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING}),i=this.device.createBindGroupLayout({label:"Compute Bind Group Layout",entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:t.format}}]}),n=this.device.createPipelineLayout({bindGroupLayouts:[i],label:"Compute Pipeline Layout"});this.computeBindGroup=this.device.createBindGroup({layout:i,label:"Compute Bind Group",entries:[{binding:0,resource:t.createView()}]});const s=this.device.createShaderModule({label:"Compute Shader",code:Lt});return this.computePipeline=this.device.createComputePipeline({layout:n,label:"Compute Pipeline",compute:{constants:{size:e},module:s,entryPoint:"mainCompute"}}),this.workgroupCount[0]=Math.ceil(w/e),this.workgroupCount[1]=Math.ceil(b/e),t}createTracerPipeline(e){const t=this.createComputePipeline(),i=this.device.createShaderModule({label:"Tracer Shader",code:e});this.tracerPipeline=this.device.createRenderPipeline({label:"Tracer Pipeline",layout:"auto",vertex:{entryPoint:"mainVertex",module:i},fragment:{targets:[{format:this.format}],entryPoint:"mainFragment",module:i}}),this.tracerBindGroup=this.device.createBindGroup({layout:this.tracerPipeline.getBindGroupLayout(0),label:"Tracer Bind Group",entries:[{binding:0,resource:t.createView()},{binding:1,resource:this.sampler}]})}createImagePipeline(e){const{width:t,height:i}=le;this.imageTexture=this.device.createTexture({label:"CPU Computed Image",size:[t,i],format:"rgba8unorm",usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST});const n=this.device.createShaderModule({label:"Main Shader",code:e});this.imagePipeline=this.device.createRenderPipeline({label:"Image Pipeline",layout:"auto",vertex:{entryPoint:"mainVertex",module:n},fragment:{targets:[{format:this.format}],entryPoint:"mainFragment",module:n}}),this.imageBindGroup=this.device.createBindGroup({layout:this.imagePipeline.getBindGroupLayout(0),entries:[{binding:0,resource:this.imageTexture.createView()},{binding:1,resource:this.sampler}]})}setActiveTexture(e){const t=this.device.createCommandEncoder(),{width:i,height:n}=le;this.setImageData(e),this.device.queue.copyExternalImageToTexture({source:this.image,flipY:!0},{texture:this.imageTexture},{width:i,height:n});const s=t.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),storeOp:"store",loadOp:"clear"}]});s.setBindGroup(0,this.imageBindGroup),s.setPipeline(this.imagePipeline),s.draw(6),s.end(),this.device.queue.submit([t.finish()])}drawImage(e){if(e)return this.setActiveTexture(e);const t=this.device.createCommandEncoder(),i=t.beginComputePass();i.setPipeline(this.computePipeline),i.setBindGroup(0,this.computeBindGroup),i.dispatchWorkgroups(...this.workgroupCount),i.end();const n=t.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),storeOp:"store",loadOp:"clear"}]});n.setBindGroup(0,this.tracerBindGroup),n.setPipeline(this.tracerPipeline),n.draw(6),n.end(),this.device.queue.submit([t.finish()])}clear(){const e=this.device.createCommandEncoder(),t=He(this.clearColor,1),i=t.get("r")??0,n=t.get("g")??0,s=t.get("b")??0;e.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:[i,n,s,1],storeOp:"store",loadOp:"clear"}]}).end(),this.device.queue.submit([e.finish()])}get sampler(){return this.device.createSampler({addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",minFilter:"linear",magFilter:"linear"})}get ready(){return!!this.imagePipeline}}class Bt{t=0;frontFace=!1;material;point=new p;normal=new p;setFaceNormal(e,t){this.frontFace=e.direction.dot(t)<0,this.normal.copy(this.frontFace?t:t.negate)}}const v=new Bt;class Xe{}class Ft extends Xe{objects=[];constructor(){super()}add(e){this.objects.push(e)}hit(e,t,i){let n=!1,s=i;for(let o=0,a=this.objects.length;o<a;o++)this.objects[o].hit(e,t,s)&&(s=v.t,n=!0);return n}get hittables(){return this.objects}dispose(){this.objects.length=0}}class Nt{list=new Ft;color=new p;constructor(){this.addSphere(1e3,new p(0,-1e3,0),new ie(new p(.5))),this.generateSmallSpheres(),this.addSphere(1,new p(0,1,0),new he(1.5)),this.addSphere(1,new p(-4,1,0),new ie(new p(.4,.2,.1))),this.addSphere(1,new p(4,1,0),new de(new p(.7,.6,.5),0))}addSphere(e,t,i){this.list.add(new kt(e,t,i))}generateSmallSpheres(){for(let e=-11;e<11;e++)for(let t=-11;t<11;t++){const i=new p(Math.random()*.9+e,.2,Math.random()*.9+t),n=new p(4,.2,0);if(i.clone.sub(n).length>.9){const s=Math.random();if(s<.8){this.color.random().multiply(this.color.random());const o=new ie(this.color);this.addSphere(.2,i,o)}else if(s<.95){this.color.random(.5);const o=O(0,.5),a=new de(this.color,o);this.addSphere(.2,i,a)}else{const o=new he(1.5);this.addSphere(.2,i,o)}}}}get hittables(){return this.list.hittables}get objects(){return this.list}dispose(){this.list.dispose(),this.color.reset()}}class kt extends Xe{constructor(e,t,i){super(),this.radius=e,this.center=t,this.material=i}hit(e,t,i){const n=e.origin.clone.sub(this.center),s=e.direction.lengthSquared,o=n.dot(e.direction),a=n.lengthSquared-this.radius*this.radius,d=o*o-s*a;if(d<0)return!1;const c=Math.sqrt(d);let l=(-o-c)/s;if((l<t||l>i)&&(l=(-o+c)/s,l<t||l>i))return!1;v.point.copy(e.at(l));const m=v.point.clone.sub(this.center).divide(this.radius);return v.setFaceNormal(e,m),v.material=this.material,v.t=l,!0}}class me{}class de extends me{fuzz;albedo;direction=new p;constructor(e,t){super(),this.albedo=e.clone,this.fuzz=Math.min(t,1)}scatter(e,t,i){const n=e.direction.normalize.reflect(v.normal);return this.direction.randomUnitSphere.multiply(this.fuzz).add(n),t.direction=this.direction,t.origin=v.point,i.copy(this.albedo),this.direction.dot(v.normal)>0}}class ie extends me{albedo;direction=new p;constructor(e){super(),this.albedo=e.clone}scatter(e,t,i){const n=v.normal.clone.add(this.direction.randomNormalized);return n.nearZero&&n.copy(v.normal),t.direction=n,t.origin=v.point,i.copy(this.albedo),!0}}class he extends me{constructor(e){super(),this.refraction=e}reflectance(e,t){const i=Math.pow((1-t)/(1+t),2);return Math.pow(1-e,5)*(1-i)+i}scatter(e,t,i){const n=e.direction.normalize,s=Math.min(n.clone.negate.dot(v.normal),1),o=v.frontFace?1/this.refraction:this.refraction;return Math.sqrt(1-s*s)*o>1||Math.random()<this.reflectance(s,o)?n.reflect(v.normal):n.refract(v.normal,o),t.direction=n,t.origin=v.point,i.reset(1),!0}}const Ot=`#ifndef GL_FRAGMENT_PRECISION_HIGH
  precision mediump float;
#else
  precision highp float;
#endif

uniform sampler2D tex;

varying vec2 uv;

void main (void)
{
  gl_FragColor = texture2D(tex, uv);
}
`,zt=`precision mediump float;

uniform vec2 resolution;

attribute vec2 position;
attribute vec2 coords;
varying   vec2 uv;

void main (void)
{
  gl_Position = vec4((
    position / resolution * 2.0 - 1.0
  ) * vec2(1.0, -1.0), 0.0, 1.0);

  uv = coords;
}
`;class Ye extends fe{texture;program;constructor(e,t=Ot,i=zt){super(e),this.createProgram(t,i),this.createScene(),this.clear()}loadShader(e,t){const i=this.context.createShader(t);return this.context.shaderSource(i,e),this.context.compileShader(i),this.context.getShaderParameter(i,this.context.COMPILE_STATUS)?i:(console.error(`An error occurred compiling the shaders: ${this.context.getShaderInfoLog(i)}`),this.context.deleteShader(i))}setBufferData(e=this.width,t=this.height){this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array([0,0,e,0,0,t,0,t,e,0,e,t]),this.context.STATIC_DRAW)}createProgram(e,t){const i=this.loadShader(e,this.context.FRAGMENT_SHADER),n=this.loadShader(t,this.context.VERTEX_SHADER);if(this.program=this.context.createProgram(),n&&i&&(this.context.attachShader(this.program,i),this.context.attachShader(this.program,n),this.context.linkProgram(this.program)),!this.context.getProgramParameter(this.program,this.context.LINK_STATUS))return console.error(`Unable to initialize shader program: ${this.context.getProgramInfoLog(this.program)}`);this.context.clear(this.context.COLOR_BUFFER_BIT);const s=He(this.clearColor,1),o=s.get("r")??0,a=s.get("g")??0,d=s.get("b")??0;this.context.clearColor(o,a,d,1),this.context.useProgram(this.program)}setTextureParameters(){this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.LINEAR),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.LINEAR)}setActiveTexture(e=this.textureData,t=this.texture){this.context.activeTexture(this.context.TEXTURE0),this.context.bindTexture(this.context.TEXTURE_2D,t),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.RGB,this.width,this.height,0,this.context.RGB,this.context.UNSIGNED_BYTE,e)}createScene(){const e=this.context.getAttribLocation(this.program,"coords");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(1,1),this.context.enableVertexAttribArray(e),this.context.vertexAttribPointer(e,2,this.context.FLOAT,!1,0,0);const t=this.context.getAttribLocation(this.program,"position");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(),this.context.enableVertexAttribArray(t),this.context.vertexAttribPointer(t,2,this.context.FLOAT,!1,0,0);const i=this.context.getUniformLocation(this.program,"resolution");this.context.uniform2f(i,this.width,this.height),this.texture=this.context.createTexture(),this.setBufferData(),this.setActiveTexture(),this.setTextureParameters()}drawImage(e){this.setActiveTexture(e),this.context.drawArrays(this.context.TRIANGLES,0,6)}clear(){this.context.clear(this.context.COLOR_BUFFER_BIT)}}var Wt=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform sampler2D tex;in vec2 uv;out vec4 fragColor;void main(void){fragColor=texture(tex,uv);}`,$e=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform vec2 resolution;uniform float height;uniform float width;in vec2 position;in vec2 coords;out vec2 uv;
#ifdef CAMERA
struct Ray{vec3 origin;vec3 direction;};vec3 at(in Ray ray,in float t){return ray.origin+ray.direction*t;}
#define INFINITY 1.0 / 0.0
#define PI 3.14159265358979323846
float random(in vec2 seed){return fract(sin(dot(seed,vec2(12.9898,78.233)))*43758.5453123);}float random(in vec2 seed,in float mi,in float ma){return random(seed)*(ma-mi)+mi;}float degToRad(in float deg){return deg*PI/180.0;}bool nearZero(in vec3 vec){return(abs(vec.x)<1e-8)&&(abs(vec.y)<1e-8)&&(abs(vec.z)<1e-8);}vec3 randomVec(in vec2 seed){return vec3(random(seed*0.123),random(seed*0.456),random(seed*0.789));}vec3 randomVec(in vec2 seed,in float mi,in float ma){return vec3(random(seed*0.123,mi,ma),random(seed*0.456,mi,ma),random(seed*0.789,mi,ma));}float lengthSquared(in vec3 vec){return dot(vec,vec);}vec3 randomUnitDisk(in vec2 seed){float rand=random(seed*0.02468);float x=rand*2.0-1.0;float y=random(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3(x,y,0.0);}vec3 randomUnitSphere(in vec2 seed){for(;;){vec3 rand=randomVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0)return rand;}}vec3 randomNormalized(in vec2 seed){return normalize(randomUnitSphere(seed));}vec3 randomHemisphere(in vec3 normal,in vec2 seed){vec3 unitSphere=randomUnitSphere(seed);return dot(unitSphere,normal)>0.0? unitSphere :-unitSphere;}struct Camera{vec3 u;vec3 v;vec3 origin;vec3 vertical;vec3 horizontal;float lensRadius;vec3 lowerLeftCorner;};Camera createCamera(const in vec3 origin,const in vec3 lookAt,const in vec3 vUp,const in vec2 res,const in float fov,const in float aperture,const in float focusDist){float height=tan(degToRad(fov)*0.5)*2.0;float width=res.x/res.y*height;vec3 w=normalize(origin-lookAt);vec3 u=normalize(cross(vUp,w));vec3 v=cross(w,u);vec3 vertical=v*height*focusDist;vec3 horizontal=u*width*focusDist;return Camera(u,v,origin,vertical,horizontal,aperture*0.5,origin-horizontal*0.5-vertical*0.5-focusDist*w);}Ray getRay(Camera camera,in float s,in float t,in vec2 seed){vec3 randomDisk=randomUnitDisk(seed)*camera.lensRadius;vec3 offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}out Camera camera;
#endif
void main(void){
#ifdef CAMERA
vec2 res=vec2(width,height);camera=createCamera(vec3(13.0,2.0,3.0),vec3(0.0,0.0,0.0),vec3(0.0,1.0,0.0),res,20.0,0.1,10.0);
#endif
gl_Position=vec4((position/resolution*2.0-1.0)*vec2(1.0,-1.0),0.0,1.0);uv=coords;}`;class Ze extends Ye{samples=0;texture1;texture2;frameBuffer1;frameBuffer2;draw=this.drawImage.bind(this,void 0);samplesUniform;constructor(e,t=Wt){if(e.tracer!=="WebGL2")super(e,t,$e);else{const i=new Nt,n=i.hittables.length;super(e,t.replace("#version 300 es",`#version 300 es
#define SPHERES ${n}u`),$e.replace("#version 300 es",`#version 300 es
#define CAMERA`)),this.createWorld(i),this.createFrameBufferTextures(),this.samplesUniform=this.context.getUniformLocation(this.program,"samples")}}bindFrameBufferTextures(e,t){this.context.bindFramebuffer(this.context.FRAMEBUFFER,e),this.context.framebufferTexture2D(this.context.FRAMEBUFFER,this.context.COLOR_ATTACHMENT0,this.context.TEXTURE_2D,t,0)}createWorld(e){const t=[];for(let i=0,n=e.hittables.length;i<n;i++){const s=e.hittables[i],o={albedo:[1,1,1],extra:-1,type:0};s.material instanceof de?(o.albedo=s.material.albedo.get(),o.extra=s.material.fuzz,o.type=1):s.material instanceof he?(o.extra=s.material.refraction,o.type=2):o.albedo=s.material.albedo.get(),t.push({center:s.center.get(),radius:s.radius,material:o})}e.dispose(),this.updateUniforms(t)}createFrameBufferTextures(){this.texture1=this.context.createTexture(),this.setActiveTexture(this.textureData,this.texture1),this.setTextureParameters(),this.texture2=this.context.createTexture(),this.setActiveTexture(null,this.texture2),this.setTextureParameters(),this.frameBuffer1=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer1,this.texture1),this.frameBuffer2=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer2,this.texture2)}updateUniforms(e){for(let s=0,o=e.length;s<o;s++){const a=this.context.getUniformLocation(this.program,`spheres[${s}].material`),d=this.context.getUniformLocation(this.program,`spheres[${s}].transform`);this.context.uniform4fv(a,[...e[s].material.albedo,e[s].material.extra]),this.context.uniform4fv(d,[...e[s].center,e[s].radius])}const t=this.context.getUniformLocation(this.program,"maxDepth"),i=this.context.getUniformLocation(this.program,"height"),n=this.context.getUniformLocation(this.program,"width");this.context.uniform1ui(t,Ve),this.context.uniform1f(i,b),this.context.uniform1f(n,w)}drawImage(e){if(e)return super.drawImage(e);this.context.uniform1ui(this.samplesUniform,++this.samples),this.samples<Z&&requestAnimationFrame(this.draw),this.context.bindFramebuffer(this.context.FRAMEBUFFER,this.frameBuffer2),this.context.bindTexture(this.context.TEXTURE_2D,this.texture1),this.context.drawArrays(this.context.TRIANGLES,0,6),this.context.bindFramebuffer(this.context.FRAMEBUFFER,null),this.context.bindTexture(this.context.TEXTURE_2D,this.texture2),this.context.drawArrays(this.context.TRIANGLES,0,6);const t=this.frameBuffer1;this.frameBuffer1=this.frameBuffer2,this.frameBuffer2=t;const i=this.texture1;this.texture1=this.texture2,this.texture2=i,h.dispatch("WebGL2::Stats::Update",{sample:this.samples})}}class qt extends fe{constructor(e){super(e),this.clear(),this.context.imageSmoothingEnabled=!0,this.context.imageSmoothingQuality="high",this.image=this.context.getImageData(0,0,this.width,this.height)}drawImage(e){this.setImageData(e),this.context.putImageData(this.image,0,0)}clear(){this.context.fillStyle=Dt(this.clearColor),this.context.clearRect(0,0,this.width,this.height),this.context.fillRect(0,0,this.width,this.height)}}class Ke{sample=0;trace;format;collect;tracer;context;f32=new Float32Array(w*b*3);u8=new Uint8ClampedArray(w*b*3);canvas;worker;samples=Z;constructor(e){this.canvas=this.createCanvas(e),this.tracer=this.getTracer(e),this.context=e.context,(this.worker=e.worker)?this.createWorkerEvents():this.loadTracer()}createCanvas(e){switch(e.context){case"WebGPU":return new je(e,e.worker?this.onCreateTracer.bind(this):this.onLoadTracer.bind(this));case"WebGL2":return new Ze(e);case"WebGL":return new Ye(e);default:return new qt(e)}}getTracer(e){return e.tracer!=="AssemblyScript"?"TypeScript":"AssemblyScript"}createWorkerEvents(){this.worker?.post("Create::Tracer",{tracer:this.tracer}),this.worker?.add("Create::Tracer",this.onCreateTracer.bind(this))}onCreateTracer(){this.canvasContextReady&&(this.worker?.add("Create::PPMImage",this.showPPMImage.bind(this)),h.dispatch(`${this.tracer}::Start`),this.createPPMImage())}loadTracer(){(this.tracer==="AssemblyScript"?j(()=>import("./release-IpIKcd8t.js"),__vite__mapDeps([]),import.meta.url):j(()=>import("./Tracer-M8b24J29.js"),__vite__mapDeps([]),import.meta.url)).then(({trace:e,format:t,collect:i})=>{this.collect=i,this.format=t,this.trace=e,this.onLoadTracer()})}onLoadTracer(){this.canvasContextReady&&(h.dispatch(`${this.tracer}::Start`,null,!0),this.createPPMImage())}createPPMImage(e=!1){if(this.worker)return this.worker.post("Create::PPMImage",{download:e});this.tracer==="AssemblyScript"?(this.f32=Float32Array.from(this.trace(this.f32)),this.u8=Uint8ClampedArray.from(this.format(this.f32,this.u8,++this.sample)),!(this.sample%100)&&this.collect()):this.format(this.trace(this.f32),this.u8,++this.sample),this.showPPMImage({pixels:this.u8,sample:this.sample,download:e},!0)}showPPMImage(e,t){const i=e;this.canvas.drawImage(i.pixels),this.samples===i.sample||!(this.worker?i.sample:this.sample)?i.download&&this.downloadPPMImage(i.pixels,t):setTimeout(this.createPPMImage.bind(this,i.download),Ut),h.dispatch(`${this.tracer}::Stats::Update`,{sample:i.sample},t)}downloadPPMImage(e,t){let i=`P3
${this.canvas.width} ${this.canvas.height}
255
`;for(let n=0;n<e.length;n+=3)i+=`${e[n]} ${e[n+1]} ${e[n+2]}
`;h.dispatch("PPMImage::Download",{image:i},t)}get canvasContextReady(){return this.context==="WebGPU"?this.canvas.ready:!0}}var Vt="struct VertexOutput{@location(0)coords: vec2f,@builtin(position)position: vec4f};@vertex fn mainVertex(@builtin(vertex_index)index: u32)->VertexOutput{let position=array(vec2f(0.0,1.0),vec2f(1.0,1.0),vec2f(0.0,0.0),vec2f(0.0,0.0),vec2f(1.0,0.0),vec2f(1.0,1.0));var output: VertexOutput;let coords=position[index];output.position=vec4f(coords*2-1,0,1);output.coords=coords;return output;}const PI=radians(180.0);const INFINITY=3.40282346638528859812e+38f;fn random(seed: vec2f)->f32{return fract(sin(dot(seed,vec2f(12.9898,78.233)))*43758.5453123);}fn randomMinMax(seed: vec2f,mi: f32,ma: f32)->f32{return random(seed)*(ma-mi)+mi;}fn nearZero(vec: vec3f)->bool{return(abs(vec.x)<1e-8f)&&(abs(vec.y)<1e-8f)&&(abs(vec.z)<1e-8f);}fn randomVec(seed: vec2f)->vec3f{return vec3f(random(seed*0.123),random(seed*0.456),random(seed*0.789));}fn randomMinMaxVec(seed: vec2f,mi: f32,ma: f32)->vec3f{return vec3f(randomMinMax(seed*0.123,mi,ma),randomMinMax(seed*0.456,mi,ma),randomMinMax(seed*0.789,mi,ma));}fn lengthSquared(vec: vec3f)->f32{return dot(vec,vec);}fn randomUnitDisk(seed: vec2f)->vec3f{let rand=random(seed*0.02468);let x=rand*2.0-1.0;let y=randomMinMax(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3f(x,y,0.0);}fn randomUnitSphere(seed: vec2f)->vec3f{for(;;){let rand=randomMinMaxVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0){return rand;}}}fn randomNormalized(seed: vec2f)->vec3f{return normalize(randomUnitSphere(seed));}fn randomHemisphere(normal: vec3f,seed: vec2f)->vec3f{let unitSphere=randomUnitSphere(seed);return select(-unitSphere,unitSphere,dot(unitSphere,normal)>0.0);}@group(0)@binding(0)var framebuffer: texture_2d<f32>;@group(0)@binding(1)var framebufferSampler: sampler;@fragment fn mainFragment(@location(0)coords: vec2f)->@location(0)vec4f{return textureSample(framebuffer,framebufferSampler,coords);}",Ht=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
struct Ray{vec3 origin;vec3 direction;};vec3 at(in Ray ray,in float t){return ray.origin+ray.direction*t;}
#define INFINITY 1.0 / 0.0
#define PI 3.14159265358979323846
float random(in vec2 seed){return fract(sin(dot(seed,vec2(12.9898,78.233)))*43758.5453123);}float random(in vec2 seed,in float mi,in float ma){return random(seed)*(ma-mi)+mi;}float degToRad(in float deg){return deg*PI/180.0;}bool nearZero(in vec3 vec){return(abs(vec.x)<1e-8)&&(abs(vec.y)<1e-8)&&(abs(vec.z)<1e-8);}vec3 randomVec(in vec2 seed){return vec3(random(seed*0.123),random(seed*0.456),random(seed*0.789));}vec3 randomVec(in vec2 seed,in float mi,in float ma){return vec3(random(seed*0.123,mi,ma),random(seed*0.456,mi,ma),random(seed*0.789,mi,ma));}float lengthSquared(in vec3 vec){return dot(vec,vec);}vec3 randomUnitDisk(in vec2 seed){float rand=random(seed*0.02468);float x=rand*2.0-1.0;float y=random(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3(x,y,0.0);}vec3 randomUnitSphere(in vec2 seed){for(;;){vec3 rand=randomVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0)return rand;}}vec3 randomNormalized(in vec2 seed){return normalize(randomUnitSphere(seed));}vec3 randomHemisphere(in vec3 normal,in vec2 seed){vec3 unitSphere=randomUnitSphere(seed);return dot(unitSphere,normal)>0.0? unitSphere :-unitSphere;}struct Camera{vec3 u;vec3 v;vec3 origin;vec3 vertical;vec3 horizontal;float lensRadius;vec3 lowerLeftCorner;};Camera createCamera(const in vec3 origin,const in vec3 lookAt,const in vec3 vUp,const in vec2 res,const in float fov,const in float aperture,const in float focusDist){float height=tan(degToRad(fov)*0.5)*2.0;float width=res.x/res.y*height;vec3 w=normalize(origin-lookAt);vec3 u=normalize(cross(vUp,w));vec3 v=cross(w,u);vec3 vertical=v*height*focusDist;vec3 horizontal=u*width*focusDist;return Camera(u,v,origin,vertical,horizontal,aperture*0.5,origin-horizontal*0.5-vertical*0.5-focusDist*w);}Ray getRay(Camera camera,in float s,in float t,in vec2 seed){vec3 randomDisk=randomUnitDisk(seed)*camera.lensRadius;vec3 offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}
#define LAMBERTIAN 0u
#define METAL 1u
#define DIELECTRIC 2u
struct Record{float t;vec3 point;vec3 normal;vec4 material;bool frontFace;}record;void setFaceNormal(const in Ray ray,const in vec3 outwardNormal){record.frontFace=dot(ray.direction,outwardNormal)<0.0;record.normal=record.frontFace ? outwardNormal :-outwardNormal;}struct Sphere{vec4 transform;vec4 material;};bool sphereHit(const in Ray ray,const in float tMin,const in float tMax,const in Sphere sphere){vec3 oc=ray.origin-sphere.transform.xyz;float a=lengthSquared(ray.direction);float halfB=dot(oc,ray.direction);float radius=sphere.transform.w;float c=lengthSquared(oc)-radius*radius;float d=halfB*halfB-a*c;if(d<0.0)return false;float sqrtD=sqrt(d);float root=(-halfB-sqrtD)/a;if(root<tMin||root>tMax){root=(-halfB+sqrtD)/a;if(root<tMin||root>tMax)return false;}record.t=root;record.point=at(ray,root);record.material=sphere.material;setFaceNormal(ray,(record.point-sphere.transform.xyz)/radius);return true;}struct Hittable{Sphere objects[SPHERES];uint length;}list;void addObject(const in Sphere object){list.objects[list.length++]=object;}bool hitObject(const in Ray ray,const in float tMin,const in float tMax){bool hit=false;float closest=tMax;for(uint o=0u,l=list.length;o<l;++o){Sphere sphere=list.objects[o];if(sphereHit(ray,tMin,closest,sphere)){closest=record.t;hit=true;}}return hit;}bool metalScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 reflected=reflect(normalize(ray.direction),record.normal);reflected+=randomUnitSphere(seed)*material.a;scattered=Ray(record.point,reflected);attenuation=material.rgb;return dot(scattered.direction,record.normal)>0.0;}float reflectance(in float cosine,in float ratio){float reflectance=(1.0-ratio)/(1.0+ratio);reflectance=reflectance*reflectance;return pow((1.0-cosine),5.0)*(1.0-reflectance)+reflectance;}bool dielectricScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 direction=normalize(ray.direction);float tCos=min(dot(-direction,record.normal),1.0);float ratio=record.frontFace ? 1.0/material.a : material.a;bool willReflect=sqrt(1.0-tCos*tCos)*ratio>1.0||random(seed)<reflectance(tCos,ratio);direction=willReflect? reflect(direction,record.normal): refract(direction,record.normal,ratio);scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}bool lambertianScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed){vec3 direction=record.normal+randomNormalized(seed);if(nearZero(direction))direction=record.normal;scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}
#define WHITE vec3(1.0, 1.0, 1.0)
#define SKY vec3(0.5, 0.7, 1.0)
vec3 skyColor(in Ray ray){vec3 direction=normalize(ray.direction);float t=(direction.y+1.0)*0.5;return(1.0-t)*WHITE+SKY*t;}vec3 getColor(in Ray ray,uint depth,in vec2 seed){vec3 color=WHITE;for(uint d=depth;d>0u;--d){if(hitObject(ray,0.001,INFINITY)){Ray scattered;vec3 attenuation;bool scatter=false;scatter=record.material.a>1.0? dielectricScatter(attenuation,scattered,record.material,seed,ray): record.material.a>-1.0? metalScatter(attenuation,scattered,record.material,seed,ray): lambertianScatter(attenuation,scattered,record.material,seed);if(scatter){color*=attenuation;ray=scattered;}}else{color*=skyColor(ray);break;}}return color;}void inputColor(inout vec3 color,const in uint samples){color*=color;color*=float(samples-1u);}void outputColor(inout vec3 color,const in uint samples){color/=float(samples);color=sqrt(color);}in vec2 uv;in Camera camera;out vec4 fragColor;uniform float width;uniform float height;uniform uint samples;uniform uint maxDepth;uniform sampler2D frame;uniform Sphere spheres[SPHERES];void addSpheres(void){for(uint s=0u;s<SPHERES;s++)addObject(Sphere(spheres[s].transform,spheres[s].material));}void main(void){vec2 res=vec2(width,height);vec2 mappedUV=vec2(uv.x,1.0-uv.y);vec3 color=texture(frame,mappedUV).rgb;addSpheres();inputColor(color,samples);vec2 coord=mappedUV*res;vec2 seed=uv*coord*float(samples);float u=(coord.x+random(seed))/res.x;float v=(coord.y+random(seed))/res.y;Ray ray=getRay(camera,u,v,seed);color+=getColor(ray,maxDepth,seed);outputColor(color,samples);fragColor=vec4(color,1.0);}`;class jt{canvas;constructor(e){h.dispatch(`${e.tracer}::Start`),this.canvas=this.createCanvas(e)}createCanvas(e){switch(e.context){case"WebGPU":return new je(e,this.onContextReady.bind(this),Vt);default:{const t=new Ze(e,Ht);return t.drawImage(),t}}}onContextReady(){this.canvas.drawImage()}}let ne=0,De,Le,Ge,se=new Float32Array(w*b*3),oe=new Uint8ClampedArray(w*b*3);self.onerror=r=>console.error(r);self.onmessage=async r=>{const{event:e}=r.data;let{params:t}=r.data;switch(e){case"Transfer::Offscreen":return new Ke({offscreen:!0,...t});case"Create::Tracer":{const i=await(t.tracer==="AssemblyScript"?j(()=>import("./release-IpIKcd8t.js"),__vite__mapDeps([]),import.meta.url):j(()=>import("./Tracer-M8b24J29.js"),__vite__mapDeps([]),import.meta.url));Ge=i.collect,Le=i.format,De=i.trace;break}case"Create::PPMImage":{se=new Float32Array(De(se)),oe=new Uint8ClampedArray(Le(se,oe,++ne)),t={sample:ne,pixels:oe,...t},!(ne%100)&&Ge();break}}self.postMessage({response:t,name:e})};const Xt=self;let Yt=class extends CustomEvent{data};class Zt{target=new EventTarget;events=new Map;callbacks=new Map;add(e,t){const i=this.callbacks.get(e);i?i.push(t):this.callbacks.set(e,[t]),this.events.set(e,new Yt(e)),this.target.addEventListener(e,t,!1)}dispatch(e,t){const i=this.events.get(e);i&&(i.data=t,this.target.dispatchEvent(i))}remove(e,t){const i=this.callbacks.get(e);if(i&&t){const n=i.indexOf(t),s=t;n!==-1&&i.splice(n,1),this.target.removeEventListener(e,s,!1)}t||(i?.forEach(n=>this.target.removeEventListener(e,n,!1)),this.callbacks.delete(e),this.events.delete(e))}dispose(){this.callbacks.clear(),this.events.clear()}}class Be{constructor(e){this.worker=e}add(e,t){this.worker.add(e,t)}static dispatch(e,t){Xt.postMessage({name:e,response:{data:t}})}remove(e){this.worker.remove(e)}dispose(){this.worker.dispose()}}class Kt extends Zt{offscreen=!1;workerEvents;createWorkerEvents(e,t){this.workerEvents=new Be(e),this.offscreen=t}add(e,t){this.offscreen?this.workerEvents?.add(e,t):super.add(e,t)}dispatch(e,t,i=!1){i?Be.dispatch(e,t):super.dispatch(e,t)}remove(e,t){this.offscreen?this.workerEvents?.remove(e):super.remove(e,t)}dispose(){this.workerEvents?.dispose(),super.dispose()}}const h=new Kt,Qt="_container_23ksy_1",Jt="_stats_23ksy_6",ae={container:Qt,stats:Jt},er=R("<div>"),tr=R("<strong>"),rr=R("<ul><li><strong>Processing: </strong><em></em></li><li><strong>Context: </strong><em></em></li><li><strong>Language: </strong><em></em></li><li><strong>Environment: </strong><em></em></li><li><strong>Samples: </strong><em> / </em></li><li><strong>Last Render Time: </strong><em>~<!> sec.</em></li><li><strong>Total Render Time: </strong><em>~<!> sec."),k=r=>{let e=Date.now(),t=Date.now();const[i,n]=U(""),[s,o]=U(0),[a,d]=U(!1),[c,l]=U(0),[m,S]=U(0),N=r.children,{tracer:T,processing:K,context:Qe}=N.dataset,pe=E=>n(E.data),Je=()=>d(!a()),ve=()=>t=Date.now(),ge=E=>{const $=Date.now(),{sample:y}=E.data;S(Me(($-t)/1e3)),l(Me(($-e)/1e3)),o(y),e=$};return h.add(`${T}::Start`,ve),h.add(`${T}::Init::Fail`,pe),h.add(`${T}::Stats::Update`,ge),wt(()=>{h.remove(`${T}::Start`,ve),h.add(`${T}::Init::Fail`,pe),h.remove(`${T}::Stats::Update`,ge)}),(()=>{const E=er();return E.$$click=Je,g(E,()=>r.children,null),g(E,(()=>{const $=xt(()=>!!i());return()=>$()?(()=>{const y=tr();return g(y,i),M(()=>te(y,ae.stats)),y})():(()=>{const y=rr(),xe=y.firstChild,et=xe.firstChild,tt=et.nextSibling,be=xe.nextSibling,rt=be.firstChild,it=rt.nextSibling,we=be.nextSibling,nt=we.firstChild,st=nt.nextSibling,ye=we.nextSibling,ot=ye.firstChild,at=ot.nextSibling,Se=ye.nextSibling,ct=Se.firstChild,Q=ct.nextSibling,lt=Q.firstChild,Te=Se.nextSibling,dt=Te.firstChild,Ee=dt.nextSibling,ht=Ee.firstChild,Pe=ht.nextSibling;Pe.nextSibling;const ut=Te.nextSibling,ft=ut.firstChild,Ce=ft.nextSibling,mt=Ce.firstChild,_e=mt.nextSibling;return _e.nextSibling,g(tt,K),g(it,Qe),g(st,K==="CPU"?T:T==="WebGL2"?"GLSL ES 3.0":"WGSL"),g(at,()=>K==="GPU"?"Client":r.offscreen?"OffscreenCanvas":"Web Worker"),g(Q,s,lt),g(Q,Z,null),g(Ee,c,Pe),g(Ce,m,_e),M(D=>{const Re=ae.stats,J=+a();return Re!==D._v$&&te(y,D._v$=Re),J!==D._v$2&&((D._v$2=J)!=null?y.style.setProperty("opacity",J):y.style.removeProperty("opacity")),D},{_v$:void 0,_v$2:void 0}),y})()})(),null),M(()=>te(E,ae.container)),E})()};_t(["click"]);const ir=(r,e="image")=>{const t=document.createElement("a");t.href=URL.createObjectURL(new Blob([r],{type:"text/plain; charset=UTF-8"})),t.download=`${e}.ppm`,t.click(),URL.revokeObjectURL(t.href)};function nr(r){return new Worker(""+new URL("worker-IBfYiwBF.js",import.meta.url).href,{type:"module",name:r?.name})}class sr{worker=new nr;events=new Map;constructor(){this.worker.onmessage=this.onMessage.bind(this),this.worker.onerror=this.onError.bind(this)}add(e,t,i){this.events.set(e,{callback:t,params:i})}transfer(e,t){this.worker.postMessage({event:"Transfer::Offscreen",params:{canvas:e,...t}},[e])}post(e,t){const i=this.events.get(e)?.params;this.worker.postMessage({event:e,params:{...i,...t}})}onMessage(e){const{name:t,response:i}=e.data;this.events?.get(t)?.callback?.(i)}onError(e){console.error(e)}remove(e){this.events.delete(e)}dispose(){this.events.clear()}}class or{offscreen=typeof HTMLCanvasElement<"u"&&!!HTMLCanvasElement.prototype.transferControlToOffscreen;constructor(e){e.forEach(t=>{const{processing:i,tracer:n}=t.dataset,s=t.dataset.context;if(i==="GPU")return new jt({canvas:t,context:s,tracer:n});const o=new sr;return h.createWorkerEvents(o,this.offscreen),this.offscreen?(h.add("PPMImage::Download",this.downloadPPMImage.bind(this)),h.add("AssemblyScript::Stats::Update",a=>this.updateStats(a,"AssemblyScript")),h.add("TypeScript::Stats::Update",a=>this.updateStats(a,"TypeScript")),h.add("AssemblyScript::Start",this.startStats.bind(this,"AssemblyScript")),h.add("TypeScript::Start",this.startStats.bind(this,"TypeScript")),o.transfer(t.transferControlToOffscreen(),{tracer:n,context:s})):new Ke({canvas:t,context:s,worker:o,tracer:n})}),!this.offscreen&&h.add("PPMImage::Download",this.downloadPPMImage.bind(this))}updateStats(e,t){this.offscreen&&h.dispatch(`${t}::Stats::Update`,e.data)}downloadPPMImage(e){ir(e.data.image)}startStats(e){this.offscreen&&h.dispatch(`${e}::Start`)}}const ar=R("<canvas data-tracer=TypeScript data-processing=CPU data-context=WebGL2>"),cr=R("<canvas data-tracer=AssemblyScript data-processing=CPU data-context=WebGL2>"),lr=R("<canvas data-processing=GPU data-context=WebGL2 data-tracer=WebGL2>"),dr=R("<canvas data-processing=GPU data-context=WebGPU data-tracer=WebGPU>"),hr=R("<section>"),ur=()=>{let r,e,t,i;const[n,s]=U(!1);let o;return bt(()=>{const{width:a,height:d}=le,c=o;c.style.setProperty("--width",`${a}px`),c.style.setProperty("--height",`${d}px`),c.style.setProperty("--ratio",`${a} / ${d}`),s(new or([r,e,t,i]).offscreen)}),(()=>{const a=hr(),d=o;return typeof d=="function"?L(d,a):o=a,g(a,G(k,{get offscreen(){return n()},get children(){const c=ar(),l=t;return typeof l=="function"?L(l,c):t=c,C(c,"height",b),C(c,"width",w),c}}),null),g(a,G(k,{get offscreen(){return n()},get children(){const c=cr(),l=i;return typeof l=="function"?L(l,c):i=c,C(c,"height",b),C(c,"width",w),c}}),null),g(a,G(k,{get children(){const c=lr(),l=r;return typeof l=="function"?L(l,c):r=c,C(c,"height",b),C(c,"width",w),c}}),null),g(a,G(k,{get children(){const c=dr(),l=e;return typeof l=="function"?L(l,c):e=c,C(c,"height",b),C(c,"width",w),c}}),null),a})()};Ct(()=>G(ur,{}),document.getElementById("root"));export{v as R,p as V,Nt as W,j as _,fr as d,mr as f,b as h,Ve as m,w};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}