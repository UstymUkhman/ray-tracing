(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const it=(r,e)=>r===e,we={equals:it};let Ue=De;const E=1,B=2,Me={owned:null,cleanups:null,context:null,owner:null};var g=null;let X=null,d=null,x=null,S=null,O=0;function ot(r,e){const t=d,s=g,n=r.length===0,i=n?Me:{owned:null,cleanups:null,context:null,owner:e===void 0?s:e},o=n?r:()=>r(()=>$(()=>q(i)));g=i,d=null;try{return M(o,!0)}finally{d=t,g=s}}function U(r,e){e=e?Object.assign({},we,e):we;const t={value:r,observers:null,observerSlots:null,comparator:e.equals||void 0},s=n=>(typeof n=="function"&&(n=n(t.value)),Ie(t,n));return[ht.bind(t),s]}function C(r,e,t){const s=Le(r,e,!1,E);W(s)}function at(r,e,t){Ue=ut;const s=Le(r,e,!1,E);(!t||!t.render)&&(s.user=!0),S?S.push(s):W(s)}function $(r){if(d===null)return r();const e=d;d=null;try{return r()}finally{d=e}}function ct(r){at(()=>$(r))}function lt(r){return g===null||(g.cleanups===null?g.cleanups=[r]:g.cleanups.push(r)),r}function ht(){if(this.sources&&this.state)if(this.state===E)W(this);else{const r=x;x=null,M(()=>N(this),!1),x=r}if(d){const r=this.observers?this.observers.length:0;d.sources?(d.sources.push(this),d.sourceSlots.push(r)):(d.sources=[this],d.sourceSlots=[r]),this.observers?(this.observers.push(d),this.observerSlots.push(d.sources.length-1)):(this.observers=[d],this.observerSlots=[d.sources.length-1])}return this.value}function Ie(r,e,t){let s=r.value;return(!r.comparator||!r.comparator(s,e))&&(r.value=e,r.observers&&r.observers.length&&M(()=>{for(let n=0;n<r.observers.length;n+=1){const i=r.observers[n],o=X&&X.running;o&&X.disposed.has(i),(o?!i.tState:!i.state)&&(i.pure?x.push(i):S.push(i),i.observers&&Fe(i)),o||(i.state=E)}if(x.length>1e6)throw x=[],new Error},!1)),e}function W(r){if(!r.fn)return;q(r);const e=g,t=d,s=O;d=g=r,dt(r,r.value,s),d=t,g=e}function dt(r,e,t){let s;try{s=r.fn(e)}catch(n){return r.pure&&(r.state=E,r.owned&&r.owned.forEach(q),r.owned=null),r.updatedAt=t+1,Be(n)}(!r.updatedAt||r.updatedAt<=t)&&(r.updatedAt!=null&&"observers"in r?Ie(r,s):r.value=s,r.updatedAt=t)}function Le(r,e,t,s=E,n){const i={fn:r,state:s,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:g,context:null,pure:t};return g===null||g!==Me&&(g.owned?g.owned.push(i):g.owned=[i]),i}function k(r){if(r.state===0)return;if(r.state===B)return N(r);if(r.suspense&&$(r.suspense.inFallback))return r.suspense.effects.push(r);const e=[r];for(;(r=r.owner)&&(!r.updatedAt||r.updatedAt<O);)r.state&&e.push(r);for(let t=e.length-1;t>=0;t--)if(r=e[t],r.state===E)W(r);else if(r.state===B){const s=x;x=null,M(()=>N(r,e[0]),!1),x=s}}function M(r,e){if(x)return r();let t=!1;e||(x=[]),S?t=!0:S=[],O++;try{const s=r();return ft(t),s}catch(s){t||(S=null),x=null,Be(s)}}function ft(r){if(x&&(De(x),x=null),r)return;const e=S;S=null,e.length&&M(()=>Ue(e),!1)}function De(r){for(let e=0;e<r.length;e++)k(r[e])}function ut(r){let e,t=0;for(e=0;e<r.length;e++){const s=r[e];s.user?r[t++]=s:k(s)}for(e=0;e<t;e++)k(r[e])}function N(r,e){r.state=0;for(let t=0;t<r.sources.length;t+=1){const s=r.sources[t];if(s.sources){const n=s.state;n===E?s!==e&&(!s.updatedAt||s.updatedAt<O)&&k(s):n===B&&N(s,e)}}}function Fe(r){for(let e=0;e<r.observers.length;e+=1){const t=r.observers[e];t.state||(t.state=B,t.pure?x.push(t):S.push(t),t.observers&&Fe(t))}}function q(r){let e;if(r.sources)for(;r.sources.length;){const t=r.sources.pop(),s=r.sourceSlots.pop(),n=t.observers;if(n&&n.length){const i=n.pop(),o=t.observerSlots.pop();s<n.length&&(i.sourceSlots[o]=s,n[s]=i,t.observerSlots[s]=o)}}if(r.owned){for(e=r.owned.length-1;e>=0;e--)q(r.owned[e]);r.owned=null}if(r.cleanups){for(e=r.cleanups.length-1;e>=0;e--)r.cleanups[e]();r.cleanups=null}r.state=0,r.context=null}function Be(r){throw r}function D(r,e){return $(()=>r(e||{}))}function mt(r,e,t){let s=t.length,n=e.length,i=s,o=0,a=0,c=e[n-1].nextSibling,h=null;for(;o<n||a<i;){if(e[o]===t[a]){o++,a++;continue}for(;e[n-1]===t[i-1];)n--,i--;if(n===o){const l=i<s?a?t[a-1].nextSibling:t[i-a]:c;for(;a<i;)r.insertBefore(t[a++],l)}else if(i===a)for(;o<n;)(!h||!h.has(e[o]))&&e[o].remove(),o++;else if(e[o]===t[i-1]&&t[a]===e[n-1]){const l=e[--n].nextSibling;r.insertBefore(t[a++],e[o++].nextSibling),r.insertBefore(t[--i],l),e[n]=t[i]}else{if(!h){h=new Map;let v=a;for(;v<i;)h.set(t[v],v++)}const l=h.get(e[o]);if(l!=null)if(a<l&&l<i){let v=o,b=1,R;for(;++v<n&&v<i&&!((R=h.get(e[v]))==null||R!==l+b);)b++;if(b>l-a){const H=e[o];for(;a<l;)r.insertBefore(t[a++],H)}else r.replaceChild(t[a++],e[o++])}else o++;else e[o++].remove()}}}const be="_$DX_DELEGATE";function pt(r,e,t,s={}){let n;return ot(i=>{n=i,e===document?r():w(e,r(),e.firstChild?null:void 0,t)},s.owner),()=>{n(),e.textContent=""}}function I(r,e,t){let s;const n=()=>{const o=document.createElement("template");return o.innerHTML=r,t?o.content.firstChild.firstChild:o.content.firstChild},i=e?()=>(s||(s=n())).cloneNode(!0):()=>$(()=>document.importNode(s||(s=n()),!0));return i.cloneNode=i,i}function vt(r,e=window.document){const t=e[be]||(e[be]=new Set);for(let s=0,n=r.length;s<n;s++){const i=r[s];t.has(i)||(t.add(i),e.addEventListener(i,gt))}}function A(r,e,t){t==null?r.removeAttribute(e):r.setAttribute(e,t)}function ye(r,e){e==null?r.removeAttribute("class"):r.className=e}function Y(r,e,t){return $(()=>r(e,t))}function w(r,e,t,s){if(t!==void 0&&!s&&(s=[]),typeof e!="function")return z(r,e,s,t);C(n=>z(r,e(),n,t),s)}function gt(r){const e=`$$${r.type}`;let t=r.composedPath&&r.composedPath()[0]||r.target;for(r.target!==t&&Object.defineProperty(r,"target",{configurable:!0,value:t}),Object.defineProperty(r,"currentTarget",{configurable:!0,get(){return t||document}});t;){const s=t[e];if(s&&!t.disabled){const n=t[`${e}Data`];if(n!==void 0?s.call(t,n,r):s.call(t,r),r.cancelBubble)return}t=t._$host||t.parentNode||t.host}}function z(r,e,t,s,n){for(;typeof t=="function";)t=t();if(e===t)return t;const i=typeof e,o=s!==void 0;if(r=o&&t[0]&&t[0].parentNode||r,i==="string"||i==="number")if(i==="number"&&(e=e.toString()),o){let a=t[0];a&&a.nodeType===3?a.data=e:a=document.createTextNode(e),t=P(r,t,s,a)}else t!==""&&typeof t=="string"?t=r.firstChild.data=e:t=r.textContent=e;else if(e==null||i==="boolean")t=P(r,t,s);else{if(i==="function")return C(()=>{let a=e();for(;typeof a=="function";)a=a();t=z(r,a,t,s)}),()=>t;if(Array.isArray(e)){const a=[],c=t&&Array.isArray(t);if(re(a,e,t,n))return C(()=>t=z(r,a,t,s,!0)),()=>t;if(a.length===0){if(t=P(r,t,s),o)return t}else c?t.length===0?Se(r,a,s):mt(r,t,a):(t&&P(r),Se(r,a));t=a}else if(e.nodeType){if(Array.isArray(t)){if(o)return t=P(r,t,s,e);P(r,t,null,e)}else t==null||t===""||!r.firstChild?r.appendChild(e):r.replaceChild(e,r.firstChild);t=e}else console.warn("Unrecognized value. Skipped inserting",e)}return t}function re(r,e,t,s){let n=!1;for(let i=0,o=e.length;i<o;i++){let a=e[i],c=t&&t[i],h;if(!(a==null||a===!0||a===!1))if((h=typeof a)=="object"&&a.nodeType)r.push(a);else if(Array.isArray(a))n=re(r,a,c)||n;else if(h==="function")if(s){for(;typeof a=="function";)a=a();n=re(r,Array.isArray(a)?a:[a],Array.isArray(c)?c:[c])||n}else r.push(a),n=!0;else{const l=String(a);c&&c.nodeType===3&&c.data===l?r.push(c):r.push(document.createTextNode(l))}}return n}function Se(r,e,t=null){for(let s=0,n=e.length;s<n;s++)r.insertBefore(e[s],t)}function P(r,e,t,s){if(t===void 0)return r.textContent="";const n=s||document.createTextNode("");if(e.length){let i=!1;for(let o=e.length-1;o>=0;o--){const a=e[o];if(n!==a){const c=a.parentNode===r;!i&&!o?c?r.replaceChild(n,a):r.insertBefore(n,t):c&&a.remove()}else i=!0}}else r.insertBefore(n,t);return[n]}const Z=(r,e=0,t=1)=>Math.max(e,Math.min(r,t)),F=(r,e)=>Math.random()*(e-r)+r,Zt=r=>r*Math.PI/180,Ee=(r,e=3)=>{const t=Math.pow(10,e);return~~(t*r)/t},xt=1/.06,wt="modulepreload",bt=function(r,e){return new URL(r,e).href},Te={},G=function(e,t,s){if(!t||t.length===0)return e();const n=document.getElementsByTagName("link");return Promise.all(t.map(i=>{if(i=bt(i,s),i in Te)return;Te[i]=!0;const o=i.endsWith(".css"),a=o?'[rel="stylesheet"]':"";if(!!s)for(let l=n.length-1;l>=0;l--){const v=n[l];if(v.href===i&&(!o||v.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${i}"]${a}`))return;const h=document.createElement("link");if(h.rel=o?"stylesheet":wt,o||(h.as="script",h.crossOrigin=""),h.href=i,document.head.appendChild(h),o)return new Promise((l,v)=>{h.addEventListener("load",l),h.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>e())};class ie{}class u{vec=[0,0,0];constructor(e=0,t=e,s=e){this.vec[0]=e,this.vec[1]=t,this.vec[2]=s}refract(e,t){const s=Math.min(this.clone.negate.dot(e),1);this.copy(e.clone.multiply(s).add(this).multiply(t));const n=Math.abs(1-this.lengthSquared);return this.add(e.multiply(-Math.sqrt(n)))}set(e,t,s){return this.vec[0]=e,this.vec[1]=t,this.vec[2]=s,this}multiply(e){if(typeof e!="number")return this.set(this.vec[0]*e.x,this.vec[1]*e.y,this.vec[2]*e.z);const t=e;return this.vec[0]*=t,this.vec[1]*=t,this.vec[2]*=t,this}divide(e){return typeof e=="number"?this.multiply(1/e):this.set(this.vec[0]/e.x,this.vec[1]/e.y,this.vec[2]/e.z)}random(e=0,t=1){return this.set(F(e,t),F(e,t),F(e,t))}reflect(e){return this.sub(e.clone.multiply(this.dot(e)*2))}get randomNormalized(){return this.randomUnitSphere.normalize}get randomUnitSphere(){for(;;)if(this.random(-1).lengthSquared<1)return this}get lengthSquared(){return this.dot(this)}get randomUnitDisk(){for(;;)if(this.random(-1),this.vec[2]=0,this.lengthSquared<1)return this}cross(e){return this.set(this.vec[1]*e.z-this.vec[2]*e.y,this.vec[2]*e.x-this.vec[0]*e.z,this.vec[0]*e.y-this.vec[1]*e.x)}dot(e){return this.vec[0]*e.x+this.vec[1]*e.y+this.vec[2]*e.z}copy(e){const{x:t,y:s,z:n}=e;return this.set(t,s,n)}add(e){return this.vec[0]+=e.x,this.vec[1]+=e.y,this.vec[2]+=e.z,this}sub(e){return this.vec[0]-=e.x,this.vec[1]-=e.y,this.vec[2]-=e.z,this}get nearZero(){return Math.abs(this.vec[0])<1e-8&&Math.abs(this.vec[1])<1e-8&&Math.abs(this.vec[2])<1e-8}get normalize(){return this.divide(this.length)}get length(){return Math.sqrt(this.lengthSquared)}get clone(){return new u(this.vec[0],this.vec[1],this.vec[2])}reset(e=0){return this.set(e,e,e)}get negate(){return this.multiply(-1)}get sqrt(){return this.set(Math.sqrt(this.vec[0]),Math.sqrt(this.vec[1]),Math.sqrt(this.vec[2]))}get rgb(){return this.set(Z(this.vec[0]*256|0,0,255),Z(this.vec[1]*256|0,0,255),Z(this.vec[2]*256|0,0,255))}get x(){return this.vec[0]}get y(){return this.vec[1]}get z(){return this.vec[2]}get(){return[...this.vec]}}class yt{t=0;frontFace=!1;material;point=new u;normal=new u;setFaceNormal(e,t){this.frontFace=e.direction.dot(t)<0,this.normal.copy(this.frontFace?t:t.negate)}}const p=new yt;class ke{}class St extends ke{objects=[];constructor(){super()}add(e){this.objects.push(e)}hit(e,t,s){let n=!1,i=s;for(let o=0,a=this.objects.length;o<a;o++)this.objects[o].hit(e,t,i)&&(i=p.t,n=!0);return n}get hittables(){return this.objects}dispose(){this.objects.length=0}}class Et{list=new St;color=new u;constructor(){this.addSphere(1e3,new u(0,-1e3,0),new K(new u(.5))),this.generateSmallSpheres(),this.addSphere(1,new u(0,1,0),new ne(1.5)),this.addSphere(1,new u(-4,1,0),new K(new u(.4,.2,.1))),this.addSphere(1,new u(4,1,0),new se(new u(.7,.6,.5),0))}addSphere(e,t,s){this.list.add(new Tt(e,t,s))}generateSmallSpheres(){for(let e=-11;e<11;e++)for(let t=-11;t<11;t++){const s=new u(Math.random()*.9+e,.2,Math.random()*.9+t),n=new u(4,.2,0);if(s.clone.sub(n).length>.9){const i=Math.random();if(i<.8){this.color.random().multiply(this.color.random());const o=new K(this.color);this.addSphere(.2,s,o)}else if(i<.95){this.color.random(.5);const o=F(0,.5),a=new se(this.color,o);this.addSphere(.2,s,a)}else{const o=new ne(1.5);this.addSphere(.2,s,o)}}}}get hittables(){return this.list.hittables}get objects(){return this.list}dispose(){this.list.dispose(),this.color.reset()}}class Tt extends ke{constructor(e,t,s){super(),this.radius=e,this.center=t,this.material=s}hit(e,t,s){const n=e.origin.clone.sub(this.center),i=e.direction.lengthSquared,o=n.dot(e.direction),a=n.lengthSquared-this.radius*this.radius,c=o*o-i*a;if(c<0)return!1;const h=Math.sqrt(c);let l=(-o-h)/i;if((l<t||l>s)&&(l=(-o+h)/i,l<t||l>s))return!1;p.point.copy(e.at(l));const v=p.point.clone.sub(this.center).divide(this.radius);return p.setFaceNormal(e,v),p.material=this.material,p.t=l,!0}}class se extends ie{fuzz;albedo;direction=new u;constructor(e,t){super(),this.albedo=e.clone,this.fuzz=Math.min(t,1)}scatter(e,t,s){const n=e.direction.normalize.reflect(p.normal);return this.direction.randomUnitSphere.multiply(this.fuzz).add(n),t.direction=this.direction,t.origin=p.point,s.copy(this.albedo),this.direction.dot(p.normal)>0}}class K extends ie{albedo;direction=new u;constructor(e){super(),this.albedo=e.clone}scatter(e,t,s){const n=p.normal.clone.add(this.direction.randomNormalized);return n.nearZero&&n.copy(p.normal),t.direction=n,t.origin=p.point,s.copy(this.albedo),!0}}class ne extends ie{constructor(e){super(),this.refraction=e}reflectance(e,t){const s=Math.pow((1-t)/(1+t),2);return Math.pow(1-e,5)*(1-s)+s}scatter(e,t,s){const n=e.direction.normalize,i=Math.min(n.clone.negate.dot(p.normal),1),o=p.frontFace?1/this.refraction:this.refraction;return Math.sqrt(1-i*i)*o>1||Math.random()<this.reflectance(i,o)?n.reflect(p.normal):n.refract(p.normal,o),t.direction=n,t.origin=p.point,s.reset(1),!0}}const _t=`#ifndef GL_FRAGMENT_PRECISION_HIGH
  precision mediump float;
#else
  precision highp float;
#endif

uniform sampler2D tex;

varying vec2 uv;

void main (void)
{
  gl_FragColor = texture2D(tex, uv);
}
`,Ct=`precision mediump float;

uniform vec2 resolution;

attribute vec2 position;
attribute vec2 coords;
varying   vec2 uv;

void main (void)
{
  gl_Position = vec4((
    position / resolution * 2.0 - 1.0
  ) * vec2(1.0, -1.0), 0.0, 1.0);

  uv = coords;
}
`;class Ne{context;clearColor=0;channels;height;width;side;constructor(e){const{canvas:t,context:s,offscreen:n}=e;this.channels=+(s==="Canvas2D")+3,this.context=t.getContext(this.getContextId(s),this.getOptions(s,n)),this.width=t.width,this.height=t.height,this.side=this.width*this.channels}getContextId(e){switch(e){case"WebGPU":return"webgpu";case"WebGL2":return"webgl2";case"WebGL":return"webgl";default:return"2d"}}getOptions(e,t=!1){switch(e){case"Canvas2D":return{willReadFrequently:!t,desynchronized:t,colorSpace:"srgb",alpha:!1};case"WebGPU":return{};default:return{powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0,preserveDrawingBuffer:!1,desynchronized:!t,premultipliedAlpha:!1,antialias:!0,stencil:!1,depth:!1,alpha:!1}}}getPixel(e,t){return t*this.side+e*this.channels}}const Rt=(r,e=1)=>new Map([["r",r>>16&e],["g",r>>8&e],["b",r&e]]),At=(r,e)=>r.divide(e).sqrt.rgb,Pt=r=>`#${`000000${r.toString(16)}`.slice(-6)}`,Kt=(r,e,t)=>{const s=new u;for(let n=0;n<r.length;n+=3){const{x:i,y:o,z:a}=At(s.set(r[n],r[n+1],r[n+2]),t);e[n]=i,e[n+1]=o,e[n+2]=a}return e};class ze extends Ne{texture;program;textureData=new Uint8ClampedArray(this.width*this.height*this.channels);constructor(e,t=_t,s=Ct){super(e),this.createProgram(t,s),this.createScene()}loadShader(e,t){const s=this.context.createShader(t);return this.context.shaderSource(s,e),this.context.compileShader(s),this.context.getShaderParameter(s,this.context.COMPILE_STATUS)?s:(console.error(`An error occurred compiling the shaders: ${this.context.getShaderInfoLog(s)}`),this.context.deleteShader(s))}setBufferData(e=this.width,t=this.height){this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array([0,0,e,0,0,t,0,t,e,0,e,t]),this.context.STATIC_DRAW)}createProgram(e,t){const s=this.loadShader(e,this.context.FRAGMENT_SHADER),n=this.loadShader(t,this.context.VERTEX_SHADER);if(this.program=this.context.createProgram(),n&&s&&(this.context.attachShader(this.program,s),this.context.attachShader(this.program,n),this.context.linkProgram(this.program)),!this.context.getProgramParameter(this.program,this.context.LINK_STATUS))return console.error(`Unable to initialize shader program: ${this.context.getProgramInfoLog(this.program)}`);this.context.clear(this.context.COLOR_BUFFER_BIT);const i=Rt(this.clearColor,1),o=i.get("r")??0,a=i.get("g")??0,c=i.get("b")??0;this.context.clearColor(o,a,c,1),this.context.useProgram(this.program)}setTextureParameters(){this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.NEAREST)}setActiveTexture(e=this.textureData,t=this.texture){this.context.activeTexture(this.context.TEXTURE0),this.context.bindTexture(this.context.TEXTURE_2D,t),this.context.texImage2D(this.context.TEXTURE_2D,0,this.context.RGB,this.width,this.height,0,this.context.RGB,this.context.UNSIGNED_BYTE,e)}createScene(){const e=this.context.getAttribLocation(this.program,"coords");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(1,1),this.context.enableVertexAttribArray(e),this.context.vertexAttribPointer(e,2,this.context.FLOAT,!1,0,0);const t=this.context.getAttribLocation(this.program,"position");this.context.bindBuffer(this.context.ARRAY_BUFFER,this.context.createBuffer()),this.setBufferData(),this.context.enableVertexAttribArray(t),this.context.vertexAttribPointer(t,2,this.context.FLOAT,!1,0,0);const s=this.context.getUniformLocation(this.program,"resolution");this.context.uniform2f(s,this.width,this.height),this.texture=this.context.createTexture(),this.setBufferData(),this.setActiveTexture(),this.setTextureParameters()}clear(){this.context.clear(this.context.COLOR_BUFFER_BIT)}drawImage(e){this.setActiveTexture(e),this.context.drawArrays(this.context.TRIANGLES,0,6)}}var $t=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform sampler2D tex;in vec2 uv;out vec4 fragColor;void main(void){fragColor=texture(tex,uv);}`,_e=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
uniform vec2 resolution;in vec2 position;in vec2 coords;out vec2 uv;
#ifdef CAMERA
struct Ray{vec3 origin;vec3 direction;};vec3 at(in Ray ray,in float t){return ray.origin+ray.direction*t;}struct Config{float width;float height;uint samples;uint maxDepth;}config=Config(360.0,240.0,500u,50u);
#define INFINITY 1.0 / 0.0
#define PI 3.14159265358979323846
float random(in vec2 seed){return fract(sin(dot(seed.xy,vec2(12.9898,78.233)))*43758.5453123);}float random(in vec2 seed,in float mi,in float ma){return random(seed)*(ma-mi)+mi;}float degToRad(in float deg){return deg*PI/180.0;}bool nearZero(in vec3 vec){return(abs(vec.x)<1e-8)&&(abs(vec.y)<1e-8)&&(abs(vec.z)<1e-8);}vec3 randomVec(in vec2 seed){return vec3(random(seed*0.123),random(seed*0.456),random(seed*0.789));}vec3 randomVec(in vec2 seed,in float mi,in float ma){return vec3(random(seed*0.123,mi,ma),random(seed*0.456,mi,ma),random(seed*0.789,mi,ma));}float lengthSquared(in vec3 vec){return dot(vec,vec);}vec3 randomUnitDisk(in vec2 seed){float rand=random(seed*0.02468);float x=rand*2.0-1.0;float y=random(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3(x,y,0.0);}vec3 randomUnitSphere(in vec2 seed){for(;;){vec3 rand=randomVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0)return rand;}}vec3 randomNormalized(in vec2 seed){return normalize(randomUnitSphere(seed));}vec3 randomHemisphere(in vec3 normal,in vec2 seed){vec3 unitSphere=randomUnitSphere(seed);return dot(unitSphere,normal)>0.0? unitSphere :-unitSphere;}struct Camera{vec3 u;vec3 v;vec3 origin;vec3 vertical;vec3 horizontal;float lensRadius;vec3 lowerLeftCorner;};Camera createCamera(const in vec3 origin,const in vec3 lookAt,const in vec3 vUp,const in vec2 res,const in float fov,const in float aperture,const in float focusDist){float height=tan(degToRad(fov)*0.5)*2.0;float width=res.x/res.y*height;vec3 w=normalize(origin-lookAt);vec3 u=normalize(cross(vUp,w));vec3 v=cross(w,u);vec3 vertical=v*height*focusDist;vec3 horizontal=u*width*focusDist;return Camera(u,v,origin,vertical,horizontal,aperture*0.5,origin-horizontal*0.5-vertical*0.5-focusDist*w);}Ray getRay(Camera camera,in float s,in float t,in vec2 seed){vec3 randomDisk=randomUnitDisk(seed)*camera.lensRadius;vec3 offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}out Camera camera;
#endif
void main(void){
#ifdef CAMERA
vec2 res=vec2(config.width,config.height);camera=createCamera(vec3(13.0,2.0,3.0),vec3(0.0,0.0,0.0),vec3(0.0,1.0,0.0),res,20.0,0.1,10.0);
#endif
gl_Position=vec4((position/resolution*2.0-1.0)*vec2(1.0,-1.0),0.0,1.0);uv=coords;}`;const m={maxDepth:50,samples:500,height:240,width:360,log:!1};class Ge extends ze{samples=0;texture1;texture2;frameBuffer1;frameBuffer2;draw=this.drawImage.bind(this,void 0);samplesUniform;constructor(e,t=$t){if(e.tracer!=="WebGL2")super(e,t,_e);else{const s=new Et,n=s.hittables.length;super(e,t.replace("#version 300 es",`#version 300 es
#define SPHERES ${n}u`),_e.replace("#version 300 es",`#version 300 es
#define CAMERA`)),this.createWorld(s),this.createFrameBufferTextures(),this.samplesUniform=this.context.getUniformLocation(this.program,"samples")}}bindFrameBufferTextures(e,t){this.context.bindFramebuffer(this.context.FRAMEBUFFER,e),this.context.framebufferTexture2D(this.context.FRAMEBUFFER,this.context.COLOR_ATTACHMENT0,this.context.TEXTURE_2D,t,0)}createWorld(e){const t=[];for(let s=0,n=e.hittables.length;s<n;s++){const i=e.hittables[s],o={albedo:[1,1,1],extra:-1,type:0};i.material instanceof se?(o.albedo=i.material.albedo.get(),o.extra=i.material.fuzz,o.type=1):i.material instanceof ne?(o.extra=i.material.refraction,o.type=2):o.albedo=i.material.albedo.get(),t.push({center:i.center.get(),radius:i.radius,material:o})}e.dispose(),this.updateUniforms(t)}createFrameBufferTextures(){this.texture1=this.context.createTexture(),this.setActiveTexture(this.textureData,this.texture1),this.setTextureParameters(),this.texture2=this.context.createTexture(),this.setActiveTexture(null,this.texture2),this.setTextureParameters(),this.frameBuffer1=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer1,this.texture1),this.frameBuffer2=this.context.createFramebuffer(),this.bindFrameBufferTextures(this.frameBuffer2,this.texture2)}updateUniforms(e){for(let t=0,s=e.length;t<s;t++){const n=this.context.getUniformLocation(this.program,`spheres[${t}].transform`),i=this.context.getUniformLocation(this.program,`spheres[${t}].material`);this.context.uniform4fv(n,[...e[t].center,e[t].radius]),this.context.uniform4fv(i,[...e[t].material.albedo,e[t].material.extra])}}drawImage(e){if(e)return super.drawImage(e);this.context.uniform1ui(this.samplesUniform,++this.samples),this.samples<m.samples&&requestAnimationFrame(this.draw),this.context.bindFramebuffer(this.context.FRAMEBUFFER,this.frameBuffer2),this.context.bindTexture(this.context.TEXTURE_2D,this.texture1),this.context.drawArrays(this.context.TRIANGLES,0,6),this.context.bindFramebuffer(this.context.FRAMEBUFFER,null),this.context.bindTexture(this.context.TEXTURE_2D,this.texture2),this.context.drawArrays(this.context.TRIANGLES,0,6);const t=this.frameBuffer1;this.frameBuffer1=this.frameBuffer2,this.frameBuffer2=t;const s=this.texture1;this.texture1=this.texture2,this.texture2=s,f.dispatch("WebGL2::Stats::Update",{sample:this.samples})}}class Ut extends Ne{image;constructor(e){super(e),this.context.imageSmoothingEnabled=!0,this.context.imageSmoothingQuality="high",this.image=this.context.getImageData(0,0,this.width,this.height)}drawImage(e){for(let t=0,s=0;t<e.length;t+=3,s+=4)this.image.data[s]=e[t],this.image.data[s+1]=e[t+1],this.image.data[s+2]=e[t+2],this.image.data[s+3]=255;this.context.putImageData(this.image,0,0)}clear(){this.context.fillStyle=Pt(this.clearColor),this.context.clearRect(0,0,this.width,this.height),this.context.fillRect(0,0,this.width,this.height)}}class Oe{sample=0;trace;format;collect;tracer;f32=new Float32Array(m.width*m.height*3);u8=new Uint8ClampedArray(m.width*m.height*3);canvas;worker;samples=m.samples;constructor(e){this.canvas=this.createCanvas(e),this.tracer=this.getTracer(e),(this.worker=e.worker)?this.createWorkerEvents():this.loadTracer(),this.canvas.clear()}createCanvas(e){switch(e.context){case"WebGL2":return new Ge(e);case"WebGL":return new ze(e);default:return new Ut(e)}}getTracer(e){return e.tracer!=="AssemblyScript"?"TypeScript":"AssemblyScript"}createWorkerEvents(){this.worker?.post("Create::Tracer",{tracer:this.tracer}),this.worker?.add("Create::Tracer",()=>{this.worker?.add("Create::PPMImage",this.showPPMImage.bind(this)),f.dispatch(`${this.tracer}::Start`),this.createPPMImage()})}loadTracer(){(this.tracer==="AssemblyScript"?G(()=>import("./release-31ff541f.js"),[],import.meta.url):G(()=>import("./Tracer-c460d996.js"),[],import.meta.url)).then(({trace:e,format:t,collect:s})=>{f.dispatch(`${this.tracer}::Start`,null,!0),this.trace=e,this.format=t,this.collect=s,this.createPPMImage()})}createPPMImage(e=!1){if(this.worker)return this.worker.post("Create::PPMImage",{download:e});this.tracer==="AssemblyScript"?(this.f32=Float32Array.from(this.trace(this.f32)),this.u8=Uint8ClampedArray.from(this.format(this.f32,this.u8,++this.sample)),!(this.sample%100)&&this.collect()):this.format(this.trace(this.f32),this.u8,++this.sample),this.showPPMImage({pixels:this.u8,sample:this.sample,download:e},!0)}showPPMImage(e,t){const s=e;this.canvas.drawImage(s.pixels),this.samples===s.sample||!(this.worker?s.sample:this.sample)?s.download&&this.downloadPPMImage(s.pixels,t):setTimeout(this.createPPMImage.bind(this,s.download),xt),f.dispatch(`${this.tracer}::Stats::Update`,{sample:s.sample},t)}downloadPPMImage(e,t){let s=`P3
${this.canvas.width} ${this.canvas.height}
255
`;for(let n=0;n<e.length;n+=3)s+=`${e[n]} ${e[n+1]} ${e[n+2]}
`;f.dispatch("PPMImage::Download",{image:s},t)}}var Mt=`#version 300 es
#ifndef GL_FRAGMENT_PRECISION_HIGH
precision mediump float;
#else
precision highp float;
#endif
struct Ray{vec3 origin;vec3 direction;};vec3 at(in Ray ray,in float t){return ray.origin+ray.direction*t;}struct Config{float width;float height;uint samples;uint maxDepth;}config=Config(360.0,240.0,500u,50u);
#define INFINITY 1.0 / 0.0
#define PI 3.14159265358979323846
float random(in vec2 seed){return fract(sin(dot(seed.xy,vec2(12.9898,78.233)))*43758.5453123);}float random(in vec2 seed,in float mi,in float ma){return random(seed)*(ma-mi)+mi;}float degToRad(in float deg){return deg*PI/180.0;}bool nearZero(in vec3 vec){return(abs(vec.x)<1e-8)&&(abs(vec.y)<1e-8)&&(abs(vec.z)<1e-8);}vec3 randomVec(in vec2 seed){return vec3(random(seed*0.123),random(seed*0.456),random(seed*0.789));}vec3 randomVec(in vec2 seed,in float mi,in float ma){return vec3(random(seed*0.123,mi,ma),random(seed*0.456,mi,ma),random(seed*0.789,mi,ma));}float lengthSquared(in vec3 vec){return dot(vec,vec);}vec3 randomUnitDisk(in vec2 seed){float rand=random(seed*0.02468);float x=rand*2.0-1.0;float y=random(seed*0.13579,-2.0,2.0)*sqrt(rand*-rand+rand);return vec3(x,y,0.0);}vec3 randomUnitSphere(in vec2 seed){for(;;){vec3 rand=randomVec(seed,-1.0,1.0);if(lengthSquared(rand)<1.0)return rand;}}vec3 randomNormalized(in vec2 seed){return normalize(randomUnitSphere(seed));}vec3 randomHemisphere(in vec3 normal,in vec2 seed){vec3 unitSphere=randomUnitSphere(seed);return dot(unitSphere,normal)>0.0? unitSphere :-unitSphere;}struct Camera{vec3 u;vec3 v;vec3 origin;vec3 vertical;vec3 horizontal;float lensRadius;vec3 lowerLeftCorner;};Camera createCamera(const in vec3 origin,const in vec3 lookAt,const in vec3 vUp,const in vec2 res,const in float fov,const in float aperture,const in float focusDist){float height=tan(degToRad(fov)*0.5)*2.0;float width=res.x/res.y*height;vec3 w=normalize(origin-lookAt);vec3 u=normalize(cross(vUp,w));vec3 v=cross(w,u);vec3 vertical=v*height*focusDist;vec3 horizontal=u*width*focusDist;return Camera(u,v,origin,vertical,horizontal,aperture*0.5,origin-horizontal*0.5-vertical*0.5-focusDist*w);}Ray getRay(Camera camera,in float s,in float t,in vec2 seed){vec3 randomDisk=randomUnitDisk(seed)*camera.lensRadius;vec3 offset=camera.u*randomDisk.x+camera.v*randomDisk.y;return Ray(camera.origin+offset,camera.lowerLeftCorner+camera.horizontal*s+camera.vertical*t-camera.origin-offset);}
#define LAMBERTIAN 0u
#define METAL 1u
#define DIELECTRIC 2u
struct Record{float t;vec3 point;vec3 normal;vec4 material;bool frontFace;}record;void setFaceNormal(const in Ray ray,const in vec3 outwardNormal){record.frontFace=dot(ray.direction,outwardNormal)<0.0;record.normal=record.frontFace ? outwardNormal :-outwardNormal;}struct Sphere{vec4 transform;vec4 material;};bool sphereHit(const in Ray ray,const in float tMin,const in float tMax,const in Sphere sphere){vec3 oc=ray.origin-sphere.transform.xyz;float a=lengthSquared(ray.direction);float halfB=dot(oc,ray.direction);float radius=sphere.transform.w;float c=lengthSquared(oc)-radius*radius;float d=halfB*halfB-a*c;if(d<0.0)return false;float sqrtD=sqrt(d);float root=(-halfB-sqrtD)/a;if(root<tMin||root>tMax){root=(-halfB+sqrtD)/a;if(root<tMin||root>tMax)return false;}record.t=root;record.point=at(ray,root);record.material=sphere.material;setFaceNormal(ray,(record.point-sphere.transform.xyz)/radius);return true;}struct Hittable{Sphere objects[SPHERES];uint length;}list;void addObject(const in Sphere object){list.objects[list.length++]=object;}bool hitObject(const in Ray ray,const in float tMin,const in float tMax){bool hit=false;float closest=tMax;for(uint o=0u,l=list.length;o<l;++o){Sphere sphere=list.objects[o];if(sphereHit(ray,tMin,closest,sphere)){closest=record.t;hit=true;}}return hit;}bool metalScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 reflected=reflect(normalize(ray.direction),record.normal);reflected+=randomUnitSphere(seed)*material.a;scattered=Ray(record.point,reflected);attenuation=material.rgb;return dot(scattered.direction,record.normal)>0.0;}float reflectance(in float cosine,in float ratio){float reflectance=(1.0-ratio)/(1.0+ratio);reflectance=reflectance*reflectance;return pow((1.0-cosine),5.0)*(1.0-reflectance)+reflectance;}bool dielectricScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed,in Ray ray){vec3 direction=normalize(ray.direction);float tCos=min(dot(-direction,record.normal),1.0);float ratio=record.frontFace ? 1.0/material.a : material.a;bool willReflect=sqrt(1.0-tCos*tCos)*ratio>1.0||random(seed)<reflectance(tCos,ratio);direction=willReflect? reflect(direction,record.normal): refract(direction,record.normal,ratio);scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}bool lambertianScatter(out vec3 attenuation,out Ray scattered,in vec4 material,in vec2 seed){vec3 direction=record.normal+randomNormalized(seed);if(nearZero(direction))direction=record.normal;scattered=Ray(record.point,direction);attenuation=material.rgb;return true;}
#define WHITE vec3(1.0, 1.0, 1.0)
#define SKY vec3(0.5, 0.7, 1.0)
vec3 skyColor(in Ray ray){vec3 direction=normalize(ray.direction);float t=(direction.y+1.0)*0.5;return(1.0-t)*WHITE+SKY*t;}vec3 getColor(in Ray ray,uint depth,in vec2 seed){vec3 color=WHITE;for(uint d=depth;d>0u;--d){if(hitObject(ray,0.001,INFINITY)){Ray scattered;vec3 attenuation;bool scatter=false;scatter=record.material.a>1.0? dielectricScatter(attenuation,scattered,record.material,seed,ray): record.material.a>-1.0? metalScatter(attenuation,scattered,record.material,seed,ray): lambertianScatter(attenuation,scattered,record.material,seed);if(scatter){color*=attenuation;ray=scattered;}}else{color*=skyColor(ray);break;}}return color;}void inputColor(inout vec3 color,const in uint samples){color*=color;color*=float(samples-1u);}void outputColor(inout vec3 color,const in uint samples){color/=float(samples);color=sqrt(color);}in vec2 uv;in Camera camera;out vec4 fragColor;uniform uint samples;uniform sampler2D frame;uniform Sphere spheres[SPHERES];void addSpheres(void){for(uint s=0u;s<SPHERES;s++)addObject(Sphere(spheres[s].transform,spheres[s].material));}void main(void){vec2 mappedUV=vec2(uv.x,1.0-uv.y);vec3 color=texture(frame,mappedUV).rgb;vec2 res=vec2(config.width,config.height);addSpheres();inputColor(color,samples);vec2 coord=mappedUV*res;vec2 seed=uv*coord*float(samples);float u=(coord.x+random(seed))/res.x;float v=(coord.y+random(seed))/res.y;Ray ray=getRay(camera,u,v,seed);color+=getColor(ray,config.maxDepth,seed);outputColor(color,samples);fragColor=vec4(color,1.0);}`;class It{canvas;constructor(e){f.dispatch(`${e.tracer}::Start`),this.canvas=this.createCanvas(e),this.canvas.clear(),this.canvas.drawImage()}createCanvas(e){switch(e.context){default:return new Ge(e,Mt)}}}let Q=0,Ce,Re,Ae,J=new Float32Array(m.width*m.height*3),ee=new Uint8ClampedArray(m.width*m.height*3);self.onerror=r=>console.error(r);self.onmessage=async r=>{const{event:e}=r.data;let{params:t}=r.data;switch(e){case"Transfer::Offscreen":return new Oe({offscreen:!0,...t});case"Create::Tracer":{const s=await(t.tracer==="AssemblyScript"?G(()=>import("./release-31ff541f.js"),[],import.meta.url):G(()=>import("./Tracer-c460d996.js"),[],import.meta.url));Ae=s.collect,Re=s.format,Ce=s.trace;break}case"Create::PPMImage":{J=new Float32Array(Ce(J)),ee=new Uint8ClampedArray(Re(J,ee,++Q)),t={sample:Q,pixels:ee,...t},!(Q%100)&&Ae();break}}self.postMessage({response:t,name:e})};const Lt=self;class Dt extends CustomEvent{data}class Ft{target=new EventTarget;events=new Map;callbacks=new Map;add(e,t){const s=this.callbacks.get(e);s?s.push(t):this.callbacks.set(e,[t]),this.events.set(e,new Dt(e)),this.target.addEventListener(e,t,!1)}dispatch(e,t){const s=this.events.get(e);s&&(s.data=t,this.target.dispatchEvent(s))}remove(e,t){const s=this.callbacks.get(e);if(s&&t){const n=s.indexOf(t),i=t;n!==-1&&s.splice(n,1),this.target.removeEventListener(e,i,!1)}t||(s?.forEach(n=>this.target.removeEventListener(e,n,!1)),this.callbacks.delete(e),this.events.delete(e))}dispose(){this.callbacks.clear(),this.events.clear()}}class Pe{constructor(e){this.worker=e}add(e,t){this.worker.add(e,t)}static dispatch(e,t){Lt.postMessage({name:e,response:{data:t}})}remove(e){this.worker.remove(e)}dispose(){this.worker.dispose()}}class Bt extends Ft{offscreen=!1;workerEvents;createWorkerEvents(e,t){this.workerEvents=new Pe(e),this.offscreen=t}add(e,t){this.offscreen?this.workerEvents?.add(e,t):super.add(e,t)}dispatch(e,t,s=!1){s?Pe.dispatch(e,t):super.dispatch(e,t)}remove(e,t){this.offscreen?this.workerEvents?.remove(e):super.remove(e,t)}dispose(){this.workerEvents?.dispose(),super.dispose()}}const f=new Bt,kt="_container_6bmez_1",Nt="_stats_6bmez_6",$e={container:kt,stats:Nt},zt=I("<div><ul><li><strong>Processing: </strong><em></em></li><li><strong>Context: </strong><em></em></li><li><strong>Language: </strong><em></em></li><li><strong>Environment: </strong><em></em></li><li><strong>Samples: </strong><em> / </em></li><li><strong>Last Render Time: </strong><em>~<!> sec.</em></li><li><strong>Total Render Time: </strong><em>~<!> sec."),te=r=>{let e=Date.now(),t=Date.now();const[s,n]=U(0),[i,o]=U(!1),[a,c]=U(0),[h,l]=U(0),v=r.children,{tracer:b,processing:R,context:H}=v.dataset,We=()=>o(!i()),oe=()=>t=Date.now(),ae=T=>{const y=Date.now(),{sample:L}=T.data;l(Ee((y-t)/1e3)),c(Ee((y-e)/1e3)),n(L),e=y};return f.add(`${b}::Start`,oe),f.add(`${b}::Stats::Update`,ae),lt(()=>{f.remove(`${b}::Start`,oe),f.remove(`${b}::Stats::Update`,ae)}),(()=>{const T=zt(),y=T.firstChild,L=y.firstChild,qe=L.firstChild,He=qe.nextSibling,ce=L.nextSibling,je=ce.firstChild,Ve=je.nextSibling,le=ce.nextSibling,Xe=le.firstChild,Ye=Xe.nextSibling,he=le.nextSibling,Ze=he.firstChild,Ke=Ze.nextSibling,de=he.nextSibling,Qe=de.firstChild,j=Qe.nextSibling,Je=j.firstChild,fe=de.nextSibling,et=fe.firstChild,ue=et.nextSibling,tt=ue.firstChild,me=tt.nextSibling;me.nextSibling;const rt=fe.nextSibling,st=rt.firstChild,pe=st.nextSibling,nt=pe.firstChild,ve=nt.nextSibling;return ve.nextSibling,T.$$click=We,w(T,()=>r.children,y),w(He,R),w(Ve,H),w(Ye,R==="CPU"?b:b==="WebGL2"?"GLSL ES 3.0":"WGSL"),w(Ke,()=>R==="GPU"?"Client":r.offscreen?"OffscreenCanvas":"Web Worker"),w(j,s,Je),w(j,()=>m.samples,null),w(ue,a,me),w(pe,h,ve),C(_=>{const ge=$e.container,xe=$e.stats,V=+i();return ge!==_._v$&&ye(T,_._v$=ge),xe!==_._v$2&&ye(y,_._v$2=xe),V!==_._v$3&&((_._v$3=V)!=null?y.style.setProperty("opacity",V):y.style.removeProperty("opacity")),_},{_v$:void 0,_v$2:void 0,_v$3:void 0}),T})()};vt(["click"]);const Gt=(r,e="image")=>{const t=document.createElement("a");t.href=URL.createObjectURL(new Blob([r],{type:"text/plain; charset=UTF-8"})),t.download=`${e}.ppm`,t.click(),URL.revokeObjectURL(t.href)};function Ot(){return new Worker(""+new URL("worker-7a0e2a66.js",import.meta.url).href,{type:"module"})}class Wt{worker=new Ot;events=new Map;constructor(){this.worker.onmessage=this.onMessage.bind(this),this.worker.onerror=this.onError.bind(this)}add(e,t,s){this.events.set(e,{callback:t,params:s})}transfer(e,t){this.worker.postMessage({event:"Transfer::Offscreen",params:{canvas:e,...t}},[e])}post(e,t){const s=this.events.get(e)?.params;this.worker.postMessage({event:e,params:{...s,...t}})}onMessage(e){const{name:t,response:s}=e.data;this.events?.get(t)?.callback?.(s)}onError(e){console.error(e)}remove(e){this.events.delete(e)}dispose(){this.events.clear()}}class qt{offscreen=typeof HTMLCanvasElement<"u"&&!!HTMLCanvasElement.prototype.transferControlToOffscreen;constructor(e){e.forEach(t=>{const{processing:s,tracer:n}=t.dataset,i=t.dataset.context;if(s==="GPU")return new It({canvas:t,tracer:n,context:i});const o=new Wt;return f.createWorkerEvents(o,this.offscreen),this.offscreen?(f.add("PPMImage::Download",this.downloadPPMImage.bind(this)),f.add("AssemblyScript::Stats::Update",a=>this.updateStats(a,"AssemblyScript")),f.add("TypeScript::Stats::Update",a=>this.updateStats(a,"TypeScript")),f.add("AssemblyScript::Start",this.startStats.bind(this,"AssemblyScript")),f.add("TypeScript::Start",this.startStats.bind(this,"TypeScript")),o.transfer(t.transferControlToOffscreen(),{tracer:n,context:i})):new Oe({canvas:t,worker:o,tracer:n,context:i})}),!this.offscreen&&f.add("PPMImage::Download",this.downloadPPMImage.bind(this))}updateStats(e,t){this.offscreen&&f.dispatch(`${t}::Stats::Update`,e.data)}downloadPPMImage(e){Gt(e.data.image)}startStats(e){this.offscreen&&f.dispatch(`${e}::Start`)}}const Ht=I('<canvas data-tracer="TypeScript" data-processing="CPU" data-context="WebGL2">'),jt=I('<canvas data-tracer="AssemblyScript" data-processing="CPU" data-context="WebGL2">'),Vt=I('<canvas data-processing="GPU" data-context="WebGL2" data-tracer="WebGL2">'),Xt=I("<section>"),Yt=()=>{let r,e,t;const[s,n]=U(!1);return ct(()=>n(new qt([r,e,t]).offscreen)),(()=>{const i=Xt();return w(i,D(te,{get offscreen(){return s()},get children(){const o=Ht(),a=e;return typeof a=="function"?Y(a,o):e=o,C(c=>{const h=m.height,l=m.width;return h!==c._v$&&A(o,"height",c._v$=h),l!==c._v$2&&A(o,"width",c._v$2=l),c},{_v$:void 0,_v$2:void 0}),o}}),null),w(i,D(te,{get offscreen(){return s()},get children(){const o=jt(),a=t;return typeof a=="function"?Y(a,o):t=o,C(c=>{const h=m.height,l=m.width;return h!==c._v$3&&A(o,"height",c._v$3=h),l!==c._v$4&&A(o,"width",c._v$4=l),c},{_v$3:void 0,_v$4:void 0}),o}}),null),w(i,D(te,{get children(){const o=Vt(),a=r;return typeof a=="function"?Y(a,o):r=o,C(c=>{const h=m.height,l=m.width;return h!==c._v$5&&A(o,"height",c._v$5=h),l!==c._v$6&&A(o,"width",c._v$6=l),c},{_v$5:void 0,_v$6:void 0}),o}}),null),i})()};pt(()=>D(Yt,{}),document.getElementById("root"));export{m as C,p as R,u as V,Et as W,G as _,Zt as d,Kt as f};
